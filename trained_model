{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "gpuType": "T4",
      "authorship_tag": "ABX9TyN1yOi1JMlb0DJkgVHzH7vF",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    },
    "accelerator": "GPU"
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/worldhello23/Chrome-yt-extension-/blob/master/trained_model\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install -qqqU FlagEmbedding\n"
      ],
      "metadata": {
        "id": "oRMMwHhfK7py"
      },
      "execution_count": 2,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd"
      ],
      "metadata": {
        "id": "5fxYYNgMUZZO"
      },
      "execution_count": 1,
      "outputs": []
    },
    {
      "cell_type": "code",
      "execution_count": 3,
      "metadata": {
        "id": "E8ZTz1jz9va1"
      },
      "outputs": [],
      "source": [
        "df = pd.read_csv('all_articles_with_questions_train.csv')"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# df.question[1]\\\n",
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 293
        },
        "id": "e0-zPAIyUgQc",
        "outputId": "46b17085-7776-4b14-a278-11e057c4b4a8"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                            question  \\\n",
              "0  What are the specific backtested results of th...   \n",
              "1  What factors do you think contributed to Tesla...   \n",
              "2  What factors contributed to the significant su...   \n",
              "3  What factors have contributed to PACCAR's cons...   \n",
              "4  What potential impact could the recent dividen...   \n",
              "\n",
              "                                            raw_text symbol  \n",
              "0  NOTE THIS ALGORITHM IS BASED ON BACKTESTED SIG...   PCAR  \n",
              "1  The auto sector had a tumultuous start to the ...   PCAR  \n",
              "2  Investors looking for promising momentum stock...   PCAR  \n",
              "3  Image Source: Unsplash\\n\\nQuarterly results fr...   PCAR  \n",
              "4  Morgan Stanley began coverage on shares of PAC...   PCAR  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-618fb891-0d23-4b58-a72e-5ca5fdf3a235\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>question</th>\n",
              "      <th>raw_text</th>\n",
              "      <th>symbol</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>What are the specific backtested results of th...</td>\n",
              "      <td>NOTE THIS ALGORITHM IS BASED ON BACKTESTED SIG...</td>\n",
              "      <td>PCAR</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>What factors do you think contributed to Tesla...</td>\n",
              "      <td>The auto sector had a tumultuous start to the ...</td>\n",
              "      <td>PCAR</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>What factors contributed to the significant su...</td>\n",
              "      <td>Investors looking for promising momentum stock...</td>\n",
              "      <td>PCAR</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>What factors have contributed to PACCAR's cons...</td>\n",
              "      <td>Image Source: Unsplash\\n\\nQuarterly results fr...</td>\n",
              "      <td>PCAR</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>What potential impact could the recent dividen...</td>\n",
              "      <td>Morgan Stanley began coverage on shares of PAC...</td>\n",
              "      <td>PCAR</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-618fb891-0d23-4b58-a72e-5ca5fdf3a235')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-618fb891-0d23-4b58-a72e-5ca5fdf3a235 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-618fb891-0d23-4b58-a72e-5ca5fdf3a235');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-608139cf-65cd-4369-82d8-daa40d588257\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-608139cf-65cd-4369-82d8-daa40d588257')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-608139cf-65cd-4369-82d8-daa40d588257 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 2877,\n  \"fields\": [\n    {\n      \"column\": \"question\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2876,\n        \"samples\": [\n          \"How does Teva Pharmaceutical Industries' level of total liabilities impact its overall financial health and shareholder risk?\",\n          \"What are some factors to consider when determining whether to buy or sell a particular stock, such as Apple or Caterpillar, based on the analysis provided for Monday's trade ideas?\",\n          \"What specific features will NOMI GPT offer to enhance the passenger-vehicle dialog experience in Nio's electric vehicles equipped with the Banyan system?\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"raw_text\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2877,\n        \"samples\": [\n          \"Legendary fund manager Li Lu (who Charlie Munger backed) once said, 'The biggest investment risk is not the volatility of prices, but whether you will suffer a permanent loss of capital.' So it might be obvious that you need to consider debt, when you think about how risky any given stock is, because too much debt can sink a company. We note that Teva Pharmaceutical Industries Limited ( ) does have debt on its balance sheet. But is this debt a concern to shareholders?\\n\\nWhat Risk Does Debt Bring?\\n\\nDebt assists a business until the business has trouble paying it off, either with new capital or with free cash flow. If things get really bad, the lenders can take control of the business. While that is not too common, we often do see indebted companies permanently diluting shareholders because lenders force them to raise capital at a distressed price. Of course, plenty of companies use debt to fund growth, without any negative consequences. The first thing to do when considering how much debt a business uses is to look at its cash and debt together.\\n\\nHow Much Debt Does Teva Pharmaceutical Industries Carry?\\n\\nAs you can see below, Teva Pharmaceutical Industries had US$19.8b of debt at December 2023, down from US$21.2b a year prior. However, it also had US$3.23b in cash, and so its net debt is US$16.6b.\\n\\nHow Strong Is Teva Pharmaceutical Industries' Balance Sheet?\\n\\nZooming in on the latest balance sheet data, we can see that Teva Pharmaceutical Industries had liabilities of US$12.2b due within 12 months and liabilities of US$23.1b due beyond that. Offsetting these obligations, it had cash of US$3.23b as well as receivables valued at US$3.41b due within 12 months. So it has liabilities totalling US$28.7b more than its cash and near-term receivables, combined.\\n\\nThe deficiency here weighs heavily on the US$15.6b company itself, as if a child were struggling under the weight of an enormous back-pack full of books, his sports gear, and a trumpet. So we definitely think shareholders need to watch this one closely. At the end of the day, Teva Pharmaceutical Industries would probably need a major re-capitalization if its creditors were to demand repayment.\\n\\nWe use two main ratios to inform us about debt levels relative to earnings. The first is net debt divided by earnings before interest, tax, depreciation, and amortization (EBITDA), while the second is how many times its earnings before interest and tax (EBIT) covers its interest expense (or its interest cover, for short). The advantage of this approach is that we take into account both the absolute quantum of debt (with net debt to EBITDA) and the actual interest expenses associated with that debt (with its interest cover ratio).\\n\\nTeva Pharmaceutical Industries has a debt to EBITDA ratio of 3.8 and its EBIT covered its interest expense 3.3 times. Taken together this implies that, while we wouldn't want to see debt levels rise, we think it can handle its current leverage. On a slightly more positive note, Teva Pharmaceutical Industries grew its EBIT at 19% over the last year, further increasing its ability to manage debt. When analysing debt levels, the balance sheet is the obvious place to start. But ultimately the future profitability of the business will decide if Teva Pharmaceutical Industries can strengthen its balance sheet over time. So if you're focused on the future you can check out this free .\\n\\nFinally, a company can only pay off debt with cold hard cash, not accounting profits. So we clearly need to look at whether that EBIT is leading to corresponding free cash flow. Looking at the most recent three years, Teva Pharmaceutical Industries recorded free cash flow of 24% of its EBIT, which is weaker than we'd expect. That's not great, when it comes to paying down debt.\\n\\nOur View\\n\\nWe'd go so far as to say Teva Pharmaceutical Industries's level of total liabilities was disappointing. But on the bright side, its EBIT growth rate is a good sign, and makes us more optimistic. We're quite clear that we consider Teva Pharmaceutical Industries to be really rather risky, as a result of its balance sheet health. So we're almost as wary of this stock as a hungry kitten is about falling into its owner's fish pond: once bitten, twice shy, as they say. While Teva Pharmaceutical Industries didn't make a statutory profit in the last year, its positive EBIT suggests that profitability might not be far away. .\\n\\nIf you're interested in investing in businesses that can grow profits without the burden of debt, then check out this free .\\n\\nValuation is complex, but we're helping make it simple. Find out whether Teva Pharmaceutical Industries is potentially over or undervalued by checking out our comprehensive analysis, which includes fair value estimates, risks and warnings, dividends, insider transactions and financial health. View the Free Analysis\\n\\nHave feedback on this article? Concerned about the content? with us directly. Alternatively, email editorial-team (at) simplywallst.com.\\n\\n\\n\\nThis article by Simply Wall St is general in nature. We provide commentary based on historical data and analyst forecasts only using an unbiased methodology and our articles are not intended to be financial advice. It does not constitute a recommendation to buy or sell any stock, and does not take account of your objectives, or your financial situation. We aim to bring you long-term focused analysis driven by fundamental data. Note that our analysis may not factor in the latest price-sensitive company announcements or qualitative material. Simply Wall St has no position in any stocks mentioned.\",\n          \"Food Company Mondele\\u0304z International Joins Hedera Council to Experiment With DLT Food Company Mondele\\u0304z International Joins Hedera Council to Experiment With DLT Food Company Mondele\\u0304z International Joins Hedera Council to Experiment With DLT\\n\\nThe company will use the Hedera Hashgraph technology to improve business efficiencies. The company will use the Hedera Hashgraph technology to improve business efficiencies. The company will use the Hedera Hashgraph technology to improve business efficiencies.\\n\\nBy Lyllah Ledesma Feb 14, 2024, 2:00 PM\",\n          \"Nio CEO William Li previously said that the NOMI GPT, based on AI large models, would help increase the competitiveness of the company's existing products.\\n\\n(Image credit: Nio)\\n\\nNio (NYSE: NIO) has formally rolled out NOMI GPT, a virtual voice assistant that incorporates artificial intelligence (AI) technology to deliver a better passenger-vehicle dialog experience.\\n\\nThe electric vehicle (EV) maker today announced the launch of NOMI GPT, which will be available for vehicles equipped with the Banyan system.\\n\\nBanyan is the system used in Nio's NT 2.0-based models, as opposed to its older NT 1.0-based counterpart called Aspen.\\n\\nGPT refers to Generative Pre-trained Transformer, which essentially solves for the probability of the next word appearing, sampling and generating a word from a probability distribution with each call.\\n\\nAs ChatGPT has become a hot topic around the world, a number of Chinese companies have ventured into this area.\\n\\nThe AI large language model empowers NOMI to express deeper emotions and make it smarter, according to Nio.\\n\\nNOMI GPT supports capabilities including encyclopedic quizzes, unlimited chat, and adjusting vehicle functions.\\n\\nThe upgraded voice assistant can answer passengers' questions about different fields such as science, history, art, nature, movies and music, as well as queries about the vehicle.\\n\\nIt can also perform commands including adjusting the ambient lighting in the vehicle and setting shortcut commands.\\n\\nNOMI GPT, powered by AI models, connects Nio's products, services, and communities to provide a more efficient and enjoyable AI experience, Nio said in a post published on its mobile app.\\n\\nNOMI GPT continues to evolve, with more features in development, Nio said.\\n\\nNOMI is one of the first virtual voice assistants in China to be launched by a car company. Nio announced NOMI in 2017 when it unveiled its first production car, the ES8, taking a portmanteau from the English phrase Know Me.\\n\\nPreviously NOMI was mainly used to perform tasks including playing music, navigating, making phone calls, taking photos, and finding battery swap stations.\\n\\nOn March 5, William Li, founder, chairman and CEO of Nio, said in an earnings call that the company will rely on the vehicle's computing power to launch the NOMI GPT based on AI models, which will be able to increase the competitiveness of existing products.\\n\\nOn March 11, Nio began recruiting beta testers for the NOMI GPT with an initial intake of 600 people.\\n\\nThe latest version of NOMI had gone through 132 version iterations and brings more than 2,000 features to users, the company said at the time.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"symbol\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 576,\n        \"samples\": [\n          \"BCAN\",\n          \"WMATIC\",\n          \"NTLA\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# df.raw_text.sample(5).tolist()\n",
        "d = []"
      ],
      "metadata": {
        "id": "gii_2CnCUqTe"
      },
      "execution_count": 5,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "for i in range(len(df.question)):\n",
        "\n",
        "  d.append({\n",
        "        \"query\": df.question.loc[i],\n",
        "        \"pos\": [df.raw_text.loc[i]],  # Wrap pos_text in a list to match format\n",
        "        \"neg\": df.raw_text.sample(5).tolist()\n",
        "    })\n",
        ""
      ],
      "metadata": {
        "id": "Jtvmce1AVYCi"
      },
      "execution_count": 6,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "!python -m FlagEmbedding.baai_general_embedding.finetune.hn_mine \\\n",
        "--model_name_or_path BAAI/bge-base-en-v1.5 \\\n",
        "--input_file /content/data.jsonl \\\n",
        "--output_file toy_finetune_data_minedHN.jsonl \\\n",
        "--range_for_sampling 2-200 \\\n",
        "--negative_number 15 \\\n",
        "--use_gpu_for_searching"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wexbWl-WYAk_",
        "outputId": "f82a7314-7b70-4187-cb19-ab6196f4486f"
      },
      "execution_count": 53,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "2024-05-20 19:23:44.527945: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n",
            "2024-05-20 19:23:44.527998: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n",
            "2024-05-20 19:23:44.529352: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n",
            "2024-05-20 19:23:45.663556: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT\n",
            "/usr/local/lib/python3.10/dist-packages/huggingface_hub/file_download.py:1132: FutureWarning: `resume_download` is deprecated and will be removed in version 1.0.0. Downloads always resume when possible. If you want to force a new download, use `force_download=True`.\n",
            "  warnings.warn(\n",
            "inferencing embedding for corpus (number=2877)--------------\n",
            "Inference Embeddings: 100% 12/12 [00:33<00:00,  2.83s/it]\n",
            "inferencing embedding for queries (number=5754)--------------\n",
            "Inference Embeddings: 100% 23/23 [00:05<00:00,  4.40it/s]\n",
            "create index and search------------------\n",
            "Batches: 100% 90/90 [00:00<00:00, 606.96it/s]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [],
      "metadata": {
        "id": "BkU8HDVFYAUM"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# !git clone https://github.com/FlagOpen/FlagEmbedding.git\n",
        "%cd FlagEmbedding\n",
        "!pip install  ."
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "XfAWhnyGWKNB",
        "outputId": "86236306-4aba-4c0a-8097-72e1c075da27"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Successfully installed FlagEmbedding-1.2.9\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install jsonlines\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "86d985GeZNwn",
        "outputId": "c7f82d67-6f36-476a-b0d7-4cd83bb38247"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: jsonlines in /usr/local/lib/python3.10/dist-packages (4.0.0)\n",
            "Requirement already satisfied: attrs>=19.2.0 in /usr/local/lib/python3.10/dist-packages (from jsonlines) (23.2.0)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import jsonlines\n",
        "\n",
        "with jsonlines.open(\"data.jsonl\", \"w\") as writer:\n",
        "    writer.write_all(d)"
      ],
      "metadata": {
        "id": "Vn0M7J89VcVr"
      },
      "execution_count": 9,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "!git clone https://github.com/facebookresearch/faiss.git faiss_xx\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5evlXQMxaaOm",
        "outputId": "ddc4febb-f2e9-4a6b-b238-9745ef1ddbef"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "fatal: destination path 'faiss_xx' already exists and is not an empty directory.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# %cd /content/FlagEmbedding/faiss_xx\n",
        "!pwd"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "zLpIropJaqsm",
        "outputId": "3b0cf5f7-c594-4553-95fa-cf5d90ada73b"
      },
      "execution_count": 48,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "/content/FlagEmbedding/faiss_xx\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install faiss-gpu"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Z884889jc-Sa",
        "outputId": "ea62ceb8-2094-4a05-f20d-40297980d095"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: faiss-gpu in /usr/local/lib/python3.10/dist-packages (1.7.2)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!torchrun --nproc_per_node {1} \\\n",
        "-m FlagEmbedding.baai_general_embedding.finetune.run \\\n",
        "--output_dir \"/content/\" \\\n",
        "--model_name_or_path BAAI/bge-large-en-v1.5 \\\n",
        "--train_data \"/content/data.jsonl\" \\\n",
        "--learning_rate 1e-5 \\\n",
        "--fp16 \\\n",
        "--num_train_epochs 5 \\\n",
        "--per_device_train_batch_size 8 \\\n",
        "--dataloader_drop_last True \\\n",
        "--normlized True \\\n",
        "--temperature 0.02 \\\n",
        "--query_max_len 64 \\\n",
        "--passage_max_len 256 \\\n",
        "--train_group_size 2 \\\n",
        "--negatives_cross_device \\\n",
        "--logging_steps 10 \\\n",
        "--save_steps 1000 \\\n",
        "--query_instruction_for_retrieval \"\""
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "KBvy3HfieGzS",
        "outputId": "d7cf1955-fe1b-45fc-abeb-75fb0840a4e0"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "2024-05-20 22:08:53.732649: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n",
            "2024-05-20 22:08:53.732714: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n",
            "2024-05-20 22:08:53.734008: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n",
            "2024-05-20 22:08:54.902287: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT\n",
            "05/20/2024 22:08:57 - WARNING - __main__ -   Process rank: 0, device: cuda:0, n_gpu: 1, distributed training: True, 16-bits training: True\n",
            "05/20/2024 22:08:57 - INFO - __main__ -   Training/evaluation parameters RetrieverTrainingArguments(\n",
            "_n_gpu=1,\n",
            "accelerator_config={'split_batches': False, 'dispatch_batches': None, 'even_batches': True, 'use_seedable_sampler': True, 'gradient_accumulation_kwargs': None},\n",
            "adafactor=False,\n",
            "adam_beta1=0.9,\n",
            "adam_beta2=0.999,\n",
            "adam_epsilon=1e-08,\n",
            "auto_find_batch_size=False,\n",
            "bf16=False,\n",
            "bf16_full_eval=False,\n",
            "data_seed=None,\n",
            "dataloader_drop_last=True,\n",
            "dataloader_num_workers=0,\n",
            "dataloader_persistent_workers=False,\n",
            "dataloader_pin_memory=True,\n",
            "dataloader_prefetch_factor=None,\n",
            "ddp_backend=None,\n",
            "ddp_broadcast_buffers=None,\n",
            "ddp_bucket_cap_mb=None,\n",
            "ddp_find_unused_parameters=None,\n",
            "ddp_timeout=1800,\n",
            "debug=[],\n",
            "deepspeed=None,\n",
            "disable_tqdm=False,\n",
            "dispatch_batches=None,\n",
            "do_eval=False,\n",
            "do_predict=False,\n",
            "do_train=False,\n",
            "eval_accumulation_steps=None,\n",
            "eval_delay=0,\n",
            "eval_do_concat_batches=True,\n",
            "eval_steps=None,\n",
            "evaluation_strategy=no,\n",
            "fix_position_embedding=False,\n",
            "fp16=True,\n",
            "fp16_backend=auto,\n",
            "fp16_full_eval=False,\n",
            "fp16_opt_level=O1,\n",
            "fsdp=[],\n",
            "fsdp_config={'min_num_params': 0, 'xla': False, 'xla_fsdp_v2': False, 'xla_fsdp_grad_ckpt': False},\n",
            "fsdp_min_num_params=0,\n",
            "fsdp_transformer_layer_cls_to_wrap=None,\n",
            "full_determinism=False,\n",
            "gradient_accumulation_steps=1,\n",
            "gradient_checkpointing=False,\n",
            "gradient_checkpointing_kwargs=None,\n",
            "greater_is_better=None,\n",
            "group_by_length=False,\n",
            "half_precision_backend=auto,\n",
            "hub_always_push=False,\n",
            "hub_model_id=None,\n",
            "hub_private_repo=False,\n",
            "hub_strategy=every_save,\n",
            "hub_token=<HUB_TOKEN>,\n",
            "ignore_data_skip=False,\n",
            "include_inputs_for_metrics=False,\n",
            "include_num_input_tokens_seen=False,\n",
            "include_tokens_per_second=False,\n",
            "jit_mode_eval=False,\n",
            "label_names=None,\n",
            "label_smoothing_factor=0.0,\n",
            "learning_rate=1e-05,\n",
            "length_column_name=length,\n",
            "load_best_model_at_end=False,\n",
            "local_rank=0,\n",
            "log_level=passive,\n",
            "log_level_replica=warning,\n",
            "log_on_each_node=True,\n",
            "logging_dir=/content/runs/May20_22-08-57_152b3333fcfe,\n",
            "logging_first_step=False,\n",
            "logging_nan_inf_filter=True,\n",
            "logging_steps=10,\n",
            "logging_strategy=steps,\n",
            "lr_scheduler_kwargs={},\n",
            "lr_scheduler_type=linear,\n",
            "max_grad_norm=1.0,\n",
            "max_steps=-1,\n",
            "metric_for_best_model=None,\n",
            "mp_parameters=,\n",
            "neftune_noise_alpha=None,\n",
            "negatives_cross_device=True,\n",
            "no_cuda=False,\n",
            "normlized=True,\n",
            "num_train_epochs=5.0,\n",
            "optim=adamw_torch,\n",
            "optim_args=None,\n",
            "optim_target_modules=None,\n",
            "output_dir=/content/,\n",
            "overwrite_output_dir=False,\n",
            "past_index=-1,\n",
            "per_device_eval_batch_size=8,\n",
            "per_device_train_batch_size=8,\n",
            "prediction_loss_only=False,\n",
            "push_to_hub=False,\n",
            "push_to_hub_model_id=None,\n",
            "push_to_hub_organization=None,\n",
            "push_to_hub_token=<PUSH_TO_HUB_TOKEN>,\n",
            "ray_scope=last,\n",
            "remove_unused_columns=True,\n",
            "report_to=['tensorboard'],\n",
            "resume_from_checkpoint=None,\n",
            "run_name=/content/,\n",
            "save_on_each_node=False,\n",
            "save_only_model=False,\n",
            "save_safetensors=True,\n",
            "save_steps=1000,\n",
            "save_strategy=steps,\n",
            "save_total_limit=None,\n",
            "seed=42,\n",
            "sentence_pooling_method=cls,\n",
            "skip_memory_metrics=True,\n",
            "split_batches=None,\n",
            "temperature=0.02,\n",
            "tf32=None,\n",
            "torch_compile=False,\n",
            "torch_compile_backend=None,\n",
            "torch_compile_mode=None,\n",
            "torchdynamo=None,\n",
            "tpu_metrics_debug=False,\n",
            "tpu_num_cores=None,\n",
            "use_cpu=False,\n",
            "use_inbatch_neg=True,\n",
            "use_ipex=False,\n",
            "use_legacy_prediction_loop=False,\n",
            "use_mps_device=False,\n",
            "warmup_ratio=0.0,\n",
            "warmup_steps=0,\n",
            "weight_decay=0.0,\n",
            ")\n",
            "05/20/2024 22:08:57 - INFO - __main__ -   Model parameters ModelArguments(model_name_or_path='BAAI/bge-large-en-v1.5', config_name=None, tokenizer_name=None, cache_dir=None)\n",
            "05/20/2024 22:08:57 - INFO - __main__ -   Data parameters DataArguments(train_data='/content/data.jsonl', train_group_size=2, query_max_len=64, passage_max_len=256, max_example_num_per_dataset=100000000, query_instruction_for_retrieval='', passage_instruction_for_retrieval=None)\n",
            "/usr/local/lib/python3.10/dist-packages/huggingface_hub/file_download.py:1132: FutureWarning: `resume_download` is deprecated and will be removed in version 1.0.0. Downloads always resume when possible. If you want to force a new download, use `force_download=True`.\n",
            "  warnings.warn(\n",
            "05/20/2024 22:08:57 - INFO - __main__ -   Config: BertConfig {\n",
            "  \"_name_or_path\": \"BAAI/bge-large-en-v1.5\",\n",
            "  \"architectures\": [\n",
            "    \"BertModel\"\n",
            "  ],\n",
            "  \"attention_probs_dropout_prob\": 0.1,\n",
            "  \"classifier_dropout\": null,\n",
            "  \"gradient_checkpointing\": false,\n",
            "  \"hidden_act\": \"gelu\",\n",
            "  \"hidden_dropout_prob\": 0.1,\n",
            "  \"hidden_size\": 1024,\n",
            "  \"id2label\": {\n",
            "    \"0\": \"LABEL_0\"\n",
            "  },\n",
            "  \"initializer_range\": 0.02,\n",
            "  \"intermediate_size\": 4096,\n",
            "  \"label2id\": {\n",
            "    \"LABEL_0\": 0\n",
            "  },\n",
            "  \"layer_norm_eps\": 1e-12,\n",
            "  \"max_position_embeddings\": 512,\n",
            "  \"model_type\": \"bert\",\n",
            "  \"num_attention_heads\": 16,\n",
            "  \"num_hidden_layers\": 24,\n",
            "  \"pad_token_id\": 0,\n",
            "  \"position_embedding_type\": \"absolute\",\n",
            "  \"torch_dtype\": \"float32\",\n",
            "  \"transformers_version\": \"4.40.2\",\n",
            "  \"type_vocab_size\": 2,\n",
            "  \"use_cache\": true,\n",
            "  \"vocab_size\": 30522\n",
            "}\n",
            "\n",
            "{'loss': 0.0424, 'grad_norm': 0.40691128373146057, 'learning_rate': 9.977746870653686e-06, 'epoch': 0.01}\n",
            "{'loss': 0.133, 'grad_norm': 0.03666742891073227, 'learning_rate': 9.952712100139083e-06, 'epoch': 0.03}\n",
            "{'loss': 0.1367, 'grad_norm': 0.0005139318527653813, 'learning_rate': 9.924895688456189e-06, 'epoch': 0.04}\n",
            "{'loss': 0.0128, 'grad_norm': 0.22472192347049713, 'learning_rate': 9.897079276773297e-06, 'epoch': 0.06}\n",
            "{'loss': 0.029, 'grad_norm': 13.333718299865723, 'learning_rate': 9.869262865090404e-06, 'epoch': 0.07}\n",
            "{'loss': 0.0796, 'grad_norm': 0.13018006086349487, 'learning_rate': 9.841446453407512e-06, 'epoch': 0.08}\n",
            "{'loss': 0.0128, 'grad_norm': 0.04739998281002045, 'learning_rate': 9.813630041724618e-06, 'epoch': 0.1}\n",
            "{'loss': 0.0039, 'grad_norm': 0.956281840801239, 'learning_rate': 9.785813630041725e-06, 'epoch': 0.11}\n",
            "{'loss': 0.0458, 'grad_norm': 0.9579079151153564, 'learning_rate': 9.757997218358833e-06, 'epoch': 0.13}\n",
            "{'loss': 0.058, 'grad_norm': 0.02456039935350418, 'learning_rate': 9.73018080667594e-06, 'epoch': 0.14}\n",
            "  3% 105/3595 [02:11<1:17:28,  1.33s/it]"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import torch\n",
        "torch.cuda.empty_cache()"
      ],
      "metadata": {
        "id": "I3htB94DhhV5"
      },
      "execution_count": 123,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from FlagEmbedding import FlagModel\n",
        "model = FlagModel('/content/',\n",
        "                  use_fp16=True)"
      ],
      "metadata": {
        "id": "NrzCc16nmbW1"
      },
      "execution_count": 61,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "torch.cuda.device_count()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "4tMVQe9rsNeM",
        "outputId": "f2535c78-f256-4906-c213-b92207af568b"
      },
      "execution_count": 101,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1"
            ]
          },
          "metadata": {},
          "execution_count": 101
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df_q = pd.read_csv(\"/content/all_questions_test_public.csv\")"
      ],
      "metadata": {
        "id": "nMy2twaEqHTx"
      },
      "execution_count": 63,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df_a = pd.read_csv(\"/content/all_answers_test_public.csv\")"
      ],
      "metadata": {
        "id": "0hmif7kqqJqm"
      },
      "execution_count": 64,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df_a"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "6CpdiXALteph",
        "outputId": "67e42ad5-42da-4318-a949-c4cea559b081"
      },
      "execution_count": 70,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                               raw_text  answer_id\n",
              "0     COLLEGE PARK, Md., April 05, 2024--(BUSINESS W...          0\n",
              "1     Wirestock\\n\\nNo matter the positive projection...          1\n",
              "2     Loading... Loading...\\n\\nClinical-stage psyche...          2\n",
              "3     In the phase IIb expansion, patients will be r...          3\n",
              "4     \\n\\n\\n\\n\\n\\nSequans to Showcase its Cellular I...          4\n",
              "...                                                 ...        ...\n",
              "1228  Kronos Bio will receive a $20 million upfront ...       1228\n",
              "1229  Microbetting operator Betr has struck a partne...       1229\n",
              "1230  Automotive Industry Action Group (AIAG)As the ...       1230\n",
              "1231  Shares of Micron Technology (NASDAQ: MU) have ...       1231\n",
              "1232  Every month presents new opportunities for inv...       1232\n",
              "\n",
              "[1233 rows x 2 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a6555172-98fc-4382-a66f-6f4327695a52\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>raw_text</th>\n",
              "      <th>answer_id</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>COLLEGE PARK, Md., April 05, 2024--(BUSINESS W...</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Wirestock\\n\\nNo matter the positive projection...</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Loading... Loading...\\n\\nClinical-stage psyche...</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>In the phase IIb expansion, patients will be r...</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>\\n\\n\\n\\n\\n\\nSequans to Showcase its Cellular I...</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1228</th>\n",
              "      <td>Kronos Bio will receive a $20 million upfront ...</td>\n",
              "      <td>1228</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1229</th>\n",
              "      <td>Microbetting operator Betr has struck a partne...</td>\n",
              "      <td>1229</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1230</th>\n",
              "      <td>Automotive Industry Action Group (AIAG)As the ...</td>\n",
              "      <td>1230</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1231</th>\n",
              "      <td>Shares of Micron Technology (NASDAQ: MU) have ...</td>\n",
              "      <td>1231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1232</th>\n",
              "      <td>Every month presents new opportunities for inv...</td>\n",
              "      <td>1232</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>1233 rows × 2 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a6555172-98fc-4382-a66f-6f4327695a52')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-a6555172-98fc-4382-a66f-6f4327695a52 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-a6555172-98fc-4382-a66f-6f4327695a52');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-abbffa8c-9c6b-4003-8f1d-38c25e718c9a\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-abbffa8c-9c6b-4003-8f1d-38c25e718c9a')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-abbffa8c-9c6b-4003-8f1d-38c25e718c9a button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df_a",
              "summary": "{\n  \"name\": \"df_a\",\n  \"rows\": 1233,\n  \"fields\": [\n    {\n      \"column\": \"raw_text\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1233,\n        \"samples\": [\n          \"DURHAM, N.C. --(BUSINESS WIRE)--Feb. 12, 2024-- Precision BioSciences, Inc. (Nasdaq: DTIL), an advanced gene editing company utilizing its novel proprietary ARCUS\\u00ae platform to develop in vivo gene editing therapies for sophisticated gene edits, including gene elimination, insertion, and excision, today received an upfront cash payment and equity investment from TG Therapeutics, Inc. (Nasdaq: TGTX) for an exclusive license to develop Azercabtagene Zapreleucel (azer-cel) for autoimmune diseases, and other indications outside of cancer. This is the first in a series of payments, with Precision to receive a total of $17.5 million in upfront and potential near-term payments as part of the consideration for this license.\\n\\nIn exchange for global rights to azer-cel for autoimmune diseases and indications outside of cancer, Precision has received an upfront payment totaling $7.5 million , consisting of cash and the purchase of 2,920,816 shares of Precision common stock by TG Therapeutics at a price of $0.77 per share, a 100% premium to the 30-day volume-weighted average price (VWAP) prior to purchase.\\n\\nPrecision will also receive an additional $2.5 million within 11 months, as an equity investment in Precision\\u2019s common stock at 100% premium to the then 30-day VWAP prior to purchase. Upon the achievement of certain near-term clinical milestones, Precision will also receive an additional $7.5 million payment. Precision is eligible to receive up to $288 million in milestone payments in addition to high-single-digit to low-double-digit royalties on net sales.\\n\\nPrecision expects that these recent payments from its azer-cel transactions, along with existing cash and cash equivalents, expected operational receipts, continued fiscal and operating discipline, and availability of Precision\\u2019s at-the-market (ATM) facility will extend Precision\\u2019s cash runway into the first half of 2026, through phase 1 clinical readouts for its wholly owned programs.\\n\\nAbout Precision BioSciences, Inc.\\n\\nPrecision BioSciences, Inc. is an advanced gene editing company dedicated to improving life (DTIL) with its novel and proprietary ARCUS\\u00ae genome editing platform that differs from other technologies in the way it cuts, its smaller size, and its simpler structure. Key capabilities and differentiating characteristics may enable ARCUS nucleases to drive more intended, defined therapeutic outcomes. Using ARCUS, the Company\\u2019s pipeline is comprised of in vivo gene editing candidates designed to deliver lasting cures for the broadest range of genetic and infectious diseases where no adequate treatments exist. For more information about Precision BioSciences , please visit www.precisionbiosciences.com.\\n\\nForward-Looking Statements\\n\\nThis press release contains forward-looking statements within the meaning of the Private Securities Litigation Reform Act of 1995. All statements contained in this press release that do not relate to matters of historical fact should be considered forward-looking statements, including, without limitation, statements regarding the clinical development and expected safety, efficacy and benefit of our product candidates (including azer-cel) and gene editing approaches including editing efficiency and differentiating aspects; the suitability of azer-cel for oncology indications and non-oncology indications including immunological diseases; expectations about our operational initiatives and business strategy; our expected cash runway; expectations about achievement of key milestones and receipt of any milestone, royalty, or other payments; expectations regarding our liquidity and capital resources; and anticipated timing of initial clinical data. In some cases, you can identify forward-looking statements by terms such as \\u201caim,\\u201d \\u201canticipate,\\u201d \\u201capproach,\\u201d \\u201cbelieve,\\u201d \\u201ccontemplate,\\u201d \\u201ccould,\\u201d \\u201cestimate,\\u201d \\u201cexpect,\\u201d \\u201cgoal,\\u201d \\u201cintend,\\u201d \\u201clook,\\u201d \\u201cmay,\\u201d \\u201cmission,\\u201d \\u201cplan,\\u201d \\u201cpossible,\\u201d \\u201cpotential,\\u201d \\u201cpredict,\\u201d \\u201cproject,\\u201d \\u201cpursue,\\u201d \\u201cshould,\\u201d \\u201ctarget,\\u201d \\u201cwill,\\u201d \\u201cwould,\\u201d or the negative thereof and similar words and expressions.\\n\\nForward-looking statements are based on management\\u2019s current expectations, beliefs and assumptions and on information currently available to us. These statements are neither promises nor guarantees, and involve a number of known and unknown risks, uncertainties and assumptions, and actual results may differ materially from those expressed or implied in the forward-looking statements due to various important factors, including, but not limited to, our ability to become profitable; our ability to procure sufficient funding to advance our programs; risks associated with our capital requirements, anticipated cash runway, requirements under our current debt instruments and effects of restrictions thereunder, including our ability to raise additional capital due to market conditions and/or our market capitalization; our operating expenses and our ability to predict what those expenses will be; our limited operating history; the progression and success of our programs and product candidates in which we expend our resources; our limited ability or inability to assess the safety and efficacy of our product candidates; the risk that other genome-editing technologies may provide significant advantages over our ARCUS technology; our dependence on our ARCUS technology; the initiation, cost, timing, progress, achievement of milestones and results of research and development activities and preclinical and clinical studies, including clinical trial and investigational new drug applications; public perception about genome editing technology and its applications; competition in the genome editing, biopharmaceutical, and biotechnology fields; our or our collaborators\\u2019 or other licensees\\u2019 ability to identify, develop and commercialize product candidates; pending and potential product liability lawsuits and penalties against us or our collaborators or other licensees related to our technology and our product candidates; the U.S. and foreign regulatory landscape applicable to our and our collaborators\\u2019 or other licensees\\u2019 development of product candidates; our or our collaborators\\u2019 or other licensees\\u2019 ability to advance product candidates into, and successfully design, implement and complete, clinical or field trials; potential manufacturing problems associated with the development or commercialization of any of our product candidates; our ability to obtain an adequate supply of T cells from qualified donors; delays or difficulties in our and our collaborators\\u2019 and other licensees\\u2019 ability to enroll patients; changes in interim \\u201ctop-line\\u201d and initial data that we announce or publish; if our product candidates do not work as intended or cause undesirable side effects; risks associated with applicable healthcare, data protection, privacy and security regulations and our compliance therewith; our or our licensees\\u2019 ability to obtain orphan drug designation or fast track designation for our product candidates or to realize the expected benefits of these designations; our or our collaborators\\u2019 or other licensees\\u2019 ability to obtain and maintain regulatory approval of our product candidates, and any related restrictions, limitations and/or warnings in the label of an approved product candidate; the rate and degree of market acceptance of any of our product candidates; our ability to effectively manage the growth of our operations; our ability to attract, retain, and motivate executives and personnel; effects of system failures and security breaches; insurance expenses and exposure to uninsured liabilities; effects of tax rules; effects of the COVID-19 pandemic and variants thereof, or any pandemic, epidemic, or outbreak of an infectious disease; the success of our existing collaboration agreements, and our ability to enter into new collaboration arrangements; our current and future relationships with and reliance on third parties including suppliers and manufacturers; our ability to obtain and maintain intellectual property protection for our technology and any of our product candidates; potential litigation relating to infringement or misappropriation of intellectual property rights; effects of natural and manmade disasters, public health emergencies and other natural catastrophic events; effects of sustained inflation, supply chain disruptions and major central bank policy actions; market and economic conditions; risks related to ownership of our common stock, including fluctuations in our stock price; our ability to meet the requirements of and maintain listing of our common stock on Nasdaq or other public stock exchanges; and other important factors discussed under the caption \\u201cRisk Factors\\u201d in our Quarterly Report on Form 10-Q for the quarterly period ended September 30, 2023 , as any such factors may be updated from time to time in our other filings with the SEC , which are accessible on the SEC\\u2019s website at www.sec.gov and the Investors page of our website under SEC Filings at investor.precisionbiosciences.com.\\n\\nAll forward-looking statements speak only as of the date of this press release and, except as required by applicable law, we have no obligation to update or revise any forward-looking statements contained herein, whether as a result of any new information, future events, changed circumstances or otherwise.\\n\\nView source version on businesswire.com: https://www.businesswire.com/news/home/20240212039949/en/\\n\\nInvestor and Media Contact:\\n\\nNaresh Tanna\\n\\nVice President of Investor Relations\\n\\nNaresh.Tanna@Precisionbiosciences.com\",\n          \"Ad Prosper Trading Academy\\n\\nBuy Alert: Get these AI trades on repeat\\n\\nWith this AI Trade Finder, one of my newer students took his trading account from $1,500 to over $9,400 in just over a month\\n\\nClick Here To Get My Daily List of AI Generated Trades\",\n          \"Alphabet Inc.'s (GOOG) stock has been on the rise, reaching all-time highs following the announcement of its plan to increase in-house chip production. The Wall Street Journal reported that the tech giant is looking to manufacture more semiconductors under its roof, expanding on its first semi-custom mobile chip, Tensor, which debuted in 2020 on the Google Pixel 6.\\n\\nThe new chip, dubbed Axion, will primarily be used for cloud AI workloads and is set to challenge industry leaders such as Intel (INTC), NVIDIA (NVDA), and Advanced Micro (AMD).\\n\\nIncreased Efficiency and Dependence on Foundries:\\n\\nBy designing its own chips and relying on Intel or Taiwan Semiconductor (TSM) for manufacturing, Alphabet can achieve efficiency and productivity gains, essential for embedding more AI features in devices.\\n\\nThe company's move into chip production is not intended to compete with the likes of Intel and NVIDIA but rather to coexist in the industry, particularly in the AI sector.\\n\\nBenefits for Suppliers and Competition:\\n\\nAlphabet's increased in-house chip production could significantly benefit suppliers Broadcom (AVGO) and Qualcomm (QCOM), as the company has already tapped Broadcom for its Tensor chips, and recently expanded its partnership with Qualcomm revolving around mixed reality.\\n\\nWhile the move could streamline Alphabet's supply chain and reduce its reliance on third-party chip manufacturers, it may also intensify competition in the AI space, as industry leaders such as NVIDIA, AMD, and Intel could lose market share to the tech giant.\\n\\nThe Google Axion Processor:\\n\\nAxion is the latest in a long line of custom Google silicon, following the release of five generations of Tensor Processing Units (TPU) since 2015. The Axion processors, built using the Arm Neoverse V2 CPU, deliver instances with up to 30% better performance than the fastest general-purpose Arm-based instances available in the cloud today, up to 50% better performance and up to 60% better energy-efficiency compared to current-generation x86-based instances.\\n\\nAxion's Underpinnings:\\n\\nAxion is underpinned by Titanium, a system of custom silicon microcontrollers and tiered scale-out offloads. Titanium offloads networking and security operations, freeing up capacity and improving performance for customer workloads. It also offloads storage I/O processing to Hyperdisk, a new block storage service that decouples performance from instance size and can be provisioned in real-time.\\n\\nConclusion:\\n\\nAlphabet's investment in in-house chip production and the unveiling of the Google Axion Processor signify the company's commitment to streamline its supply chain, reduces reliance on third-party chip manufacturers, and bring significant efficiency enhancements.\\n\\nWhile the move could intensify competition in the AI space, it also has the potential to benefit suppliers such as Broadcom and Qualcomm. As the race to lead in AI continues, it will be interesting to see if Alphabet expands its in-house chip production further.\\n\\nInvestment Takeaway:\\n\\nAlphabet's (GOOG) growth potential is continues strengthened by its focus on in-house chip production and the release of the Google Axion Processor. This move could lead to increased efficiency, reduced dependence on third-party manufacturers, and significant benefits for suppliers. As the company to invest in AI technology, it remains to be seen how this will impact its competition in the industry and how it will shape the future of the chip market.\\n\\n\\n\\n\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"answer_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 356,\n        \"min\": 0,\n        \"max\": 1232,\n        \"num_unique_values\": 1233,\n        \"samples\": [\n          355,\n          545,\n          802\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 70
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df_q"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "2sAeNg96tPYl",
        "outputId": "f7ce400b-385f-4dd5-ccee-dba86611a29e"
      },
      "execution_count": 69,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                               question    ID\n",
              "0     What factors make Actinium Pharmaceuticals (AT...     0\n",
              "1     What potential impact could Vertex Pharmaceuti...     1\n",
              "2     What potential impact could Actinium Pharmaceu...     2\n",
              "3     How does the integration of cryptocurrency wal...     3\n",
              "4     Question: How can individuals utilize decentra...     4\n",
              "...                                                 ...   ...\n",
              "1228  What clinical outcomes and benefits can be exp...  1228\n",
              "1229  Question: What research or clinical work does ...  1229\n",
              "1230  What innovative approach does G.ST Antivirals ...  1230\n",
              "1231  What specific steps can healthcare organizatio...  1231\n",
              "1232  What potential benefits could a personalized c...  1232\n",
              "\n",
              "[1233 rows x 2 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-af81efb1-1264-4ced-ae84-7b2a5890a9d2\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>question</th>\n",
              "      <th>ID</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>What factors make Actinium Pharmaceuticals (AT...</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>What potential impact could Vertex Pharmaceuti...</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>What potential impact could Actinium Pharmaceu...</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>How does the integration of cryptocurrency wal...</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Question: How can individuals utilize decentra...</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1228</th>\n",
              "      <td>What clinical outcomes and benefits can be exp...</td>\n",
              "      <td>1228</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1229</th>\n",
              "      <td>Question: What research or clinical work does ...</td>\n",
              "      <td>1229</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1230</th>\n",
              "      <td>What innovative approach does G.ST Antivirals ...</td>\n",
              "      <td>1230</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1231</th>\n",
              "      <td>What specific steps can healthcare organizatio...</td>\n",
              "      <td>1231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1232</th>\n",
              "      <td>What potential benefits could a personalized c...</td>\n",
              "      <td>1232</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>1233 rows × 2 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-af81efb1-1264-4ced-ae84-7b2a5890a9d2')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-af81efb1-1264-4ced-ae84-7b2a5890a9d2 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-af81efb1-1264-4ced-ae84-7b2a5890a9d2');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-984fa19c-49e4-45fb-a23c-68e8d1476f76\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-984fa19c-49e4-45fb-a23c-68e8d1476f76')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-984fa19c-49e4-45fb-a23c-68e8d1476f76 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df_q",
              "summary": "{\n  \"name\": \"df_q\",\n  \"rows\": 1233,\n  \"fields\": [\n    {\n      \"column\": \"question\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1233,\n        \"samples\": [\n          \"What factors contributed to Leidos Holdings, Inc.'s strong financial performance in the fourth quarter of 2023, and how do they plan to maintain this growth in the year ahead?\",\n          \"Question: How does the placement of cookies on your device affect your privacy and personal data?\",\n          \"What potential impact do the diverse ratings and price objectives given by various research analysts have on investor confidence in Aclaris Therapeutics' stock?\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 356,\n        \"min\": 0,\n        \"max\": 1232,\n        \"num_unique_values\": 1233,\n        \"samples\": [\n          355,\n          545,\n          802\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 69
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [],
      "metadata": {
        "id": "RwBRasaJrGmd"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "sentences_1 = [\"What factors make Actinium Pharmaceuticals (ATNM) a compelling target for potential acquisition in the radiopharmaceutical industry?\"]\n",
        "sentences_2 = [\"What potential impact could Actinium Pharmaceuticals' collaboration with UT Southwestern Medical Center have on the landscape of cancer treatment in the future?\"]"
      ],
      "metadata": {
        "id": "LwjeZVqnsWH_"
      },
      "execution_count": 65,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# r = []\n",
        "for j in range(91,1233):\n",
        "  print(j)\n",
        "  sim = []\n",
        "  embeddings_2 = model.encode(df_q.question[j])\n",
        "  for i in range(len(df_q)):\n",
        "\n",
        "    embeddings_1 = model.encode(df_a.raw_text[i])\n",
        "    # embeddings_2 = model.encode(df_q.question[j])\n",
        "    similarity = embeddings_1 @ embeddings_2.T\n",
        "    sim.append(similarity)\n",
        "  r.append(np.argmax(sim))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 426
        },
        "id": "9vCpc1ajqUcf",
        "outputId": "d77a524e-4458-41ab-e886-ca2e7ee45d49"
      },
      "execution_count": 99,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "91\n",
            "92\n"
          ]
        },
        {
          "output_type": "error",
          "ename": "KeyboardInterrupt",
          "evalue": "",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-99-085c46e2aa56>\u001b[0m in \u001b[0;36m<cell line: 2>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      6\u001b[0m   \u001b[0;32mfor\u001b[0m \u001b[0mi\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mrange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdf_q\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 8\u001b[0;31m     \u001b[0membeddings_1\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mencode\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdf_a\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mraw_text\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      9\u001b[0m     \u001b[0;31m# embeddings_2 = model.encode(df_q.question[j])\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     10\u001b[0m     \u001b[0msimilarity\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0membeddings_1\u001b[0m \u001b[0;34m@\u001b[0m \u001b[0membeddings_2\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mT\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch/utils/_contextlib.py\u001b[0m in \u001b[0;36mdecorate_context\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    113\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mdecorate_context\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    114\u001b[0m         \u001b[0;32mwith\u001b[0m \u001b[0mctx_factory\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 115\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    116\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    117\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0mdecorate_context\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/FlagEmbedding/flag_models.py\u001b[0m in \u001b[0;36mencode\u001b[0;34m(self, sentences, batch_size, max_length, convert_to_numpy)\u001b[0m\n\u001b[1;32m     94\u001b[0m                 \u001b[0mmax_length\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mmax_length\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     95\u001b[0m             ).to(self.device)\n\u001b[0;32m---> 96\u001b[0;31m             \u001b[0mlast_hidden_state\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmodel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m**\u001b[0m\u001b[0minputs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mreturn_dict\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlast_hidden_state\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     97\u001b[0m             \u001b[0membeddings\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpooling\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlast_hidden_state\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minputs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'attention_mask'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     98\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnormalize_embeddings\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py\u001b[0m in \u001b[0;36m_wrapped_call_impl\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1509\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_compiled_call_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# type: ignore[misc]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1510\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1511\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_call_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1512\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1513\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_call_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py\u001b[0m in \u001b[0;36m_call_impl\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1518\u001b[0m                 \u001b[0;32mor\u001b[0m \u001b[0m_global_backward_pre_hooks\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0m_global_backward_hooks\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1519\u001b[0m                 or _global_forward_hooks or _global_forward_pre_hooks):\n\u001b[0;32m-> 1520\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mforward_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1521\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1522\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/transformers/models/bert/modeling_bert.py\u001b[0m in \u001b[0;36mforward\u001b[0;34m(self, input_ids, attention_mask, token_type_ids, position_ids, head_mask, inputs_embeds, encoder_hidden_states, encoder_attention_mask, past_key_values, use_cache, output_attentions, output_hidden_states, return_dict)\u001b[0m\n\u001b[1;32m    986\u001b[0m             \u001b[0mpast_key_values_length\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mpast_key_values_length\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    987\u001b[0m         )\n\u001b[0;32m--> 988\u001b[0;31m         encoder_outputs = self.encoder(\n\u001b[0m\u001b[1;32m    989\u001b[0m             \u001b[0membedding_output\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    990\u001b[0m             \u001b[0mattention_mask\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mextended_attention_mask\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py\u001b[0m in \u001b[0;36m_wrapped_call_impl\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1509\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_compiled_call_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# type: ignore[misc]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1510\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1511\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_call_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1512\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1513\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_call_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py\u001b[0m in \u001b[0;36m_call_impl\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1518\u001b[0m                 \u001b[0;32mor\u001b[0m \u001b[0m_global_backward_pre_hooks\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0m_global_backward_hooks\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1519\u001b[0m                 or _global_forward_hooks or _global_forward_pre_hooks):\n\u001b[0;32m-> 1520\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mforward_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1521\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1522\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/transformers/models/bert/modeling_bert.py\u001b[0m in \u001b[0;36mforward\u001b[0;34m(self, hidden_states, attention_mask, head_mask, encoder_hidden_states, encoder_attention_mask, past_key_values, use_cache, output_attentions, output_hidden_states, return_dict)\u001b[0m\n\u001b[1;32m    580\u001b[0m                 )\n\u001b[1;32m    581\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 582\u001b[0;31m                 layer_outputs = layer_module(\n\u001b[0m\u001b[1;32m    583\u001b[0m                     \u001b[0mhidden_states\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    584\u001b[0m                     \u001b[0mattention_mask\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py\u001b[0m in \u001b[0;36m_wrapped_call_impl\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1509\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_compiled_call_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# type: ignore[misc]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1510\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1511\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_call_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1512\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1513\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_call_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py\u001b[0m in \u001b[0;36m_call_impl\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1518\u001b[0m                 \u001b[0;32mor\u001b[0m \u001b[0m_global_backward_pre_hooks\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0m_global_backward_hooks\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1519\u001b[0m                 or _global_forward_hooks or _global_forward_pre_hooks):\n\u001b[0;32m-> 1520\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mforward_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1521\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1522\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/transformers/models/bert/modeling_bert.py\u001b[0m in \u001b[0;36mforward\u001b[0;34m(self, hidden_states, attention_mask, head_mask, encoder_hidden_states, encoder_attention_mask, past_key_value, output_attentions)\u001b[0m\n\u001b[1;32m    512\u001b[0m             \u001b[0mpresent_key_value\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpresent_key_value\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mcross_attn_present_key_value\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    513\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 514\u001b[0;31m         layer_output = apply_chunking_to_forward(\n\u001b[0m\u001b[1;32m    515\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfeed_forward_chunk\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mchunk_size_feed_forward\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mseq_len_dim\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mattention_output\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    516\u001b[0m         )\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/transformers/pytorch_utils.py\u001b[0m in \u001b[0;36mapply_chunking_to_forward\u001b[0;34m(forward_fn, chunk_size, chunk_dim, *input_tensors)\u001b[0m\n\u001b[1;32m    235\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mtorch\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0moutput_chunks\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdim\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mchunk_dim\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    236\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 237\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0mforward_fn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0minput_tensors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    238\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    239\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/transformers/models/bert/modeling_bert.py\u001b[0m in \u001b[0;36mfeed_forward_chunk\u001b[0;34m(self, attention_output)\u001b[0m\n\u001b[1;32m    525\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mfeed_forward_chunk\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mattention_output\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    526\u001b[0m         \u001b[0mintermediate_output\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mintermediate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mattention_output\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 527\u001b[0;31m         \u001b[0mlayer_output\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0moutput\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mintermediate_output\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mattention_output\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    528\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mlayer_output\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    529\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py\u001b[0m in \u001b[0;36m_wrapped_call_impl\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1505\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mresult\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1506\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1507\u001b[0;31m     \u001b[0;32mdef\u001b[0m \u001b[0m_wrapped_call_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1508\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_compiled_call_impl\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1509\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_compiled_call_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# type: ignore[misc]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mKeyboardInterrupt\u001b[0m: "
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import os\n",
        "os.environ[\"CUDA_VISIBLE_DEVICES\"] = \"0,1\""
      ],
      "metadata": {
        "id": "JeNIHjK-7Aya"
      },
      "execution_count": 97,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "a = model.encode(df_a.raw_text.tolist(), batch_size = 256)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "fO0_Ujoh6zq_",
        "outputId": "fd6e7be2-d346-4f04-dc16-826a2c9ab2a6"
      },
      "execution_count": 104,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Inference Embeddings: 100%|██████████| 5/5 [00:14<00:00,  2.88s/it]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "b = model.encode(df_q.question.tolist(), batch_size = 256)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "AH5qej6JAcwv",
        "outputId": "71bd7faa-645a-4750-b874-02345858cc27"
      },
      "execution_count": 116,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Inference Embeddings: 100%|██████████| 5/5 [00:01<00:00,  4.05it/s]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "len(a)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "P0RuQkKa-1D1",
        "outputId": "b990ab99-a24f-4224-8008-a2895f873399"
      },
      "execution_count": 107,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1233"
            ]
          },
          "metadata": {},
          "execution_count": 107
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "r = []\n",
        "for j in range(len(df_q)):\n",
        "  print(j)\n",
        "  sim = []\n",
        "  embeddings_2 = model.encode(df_q.question[j], batch_size=1)\n",
        "  for i in range(len(df_q)):\n",
        "\n",
        "    similarity = a[i] @ embeddings_2.T\n",
        "    sim.append(similarity)\n",
        "\n",
        "  r.append(np.argmax(sim))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0IJzWsQH3gSB",
        "outputId": "f2cf57a4-58fe-459a-be41-10e9c97dea27"
      },
      "execution_count": 110,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0\n",
            "1\n",
            "2\n",
            "3\n",
            "4\n",
            "5\n",
            "6\n",
            "7\n",
            "8\n",
            "9\n",
            "10\n",
            "11\n",
            "12\n",
            "13\n",
            "14\n",
            "15\n",
            "16\n",
            "17\n",
            "18\n",
            "19\n",
            "20\n",
            "21\n",
            "22\n",
            "23\n",
            "24\n",
            "25\n",
            "26\n",
            "27\n",
            "28\n",
            "29\n",
            "30\n",
            "31\n",
            "32\n",
            "33\n",
            "34\n",
            "35\n",
            "36\n",
            "37\n",
            "38\n",
            "39\n",
            "40\n",
            "41\n",
            "42\n",
            "43\n",
            "44\n",
            "45\n",
            "46\n",
            "47\n",
            "48\n",
            "49\n",
            "50\n",
            "51\n",
            "52\n",
            "53\n",
            "54\n",
            "55\n",
            "56\n",
            "57\n",
            "58\n",
            "59\n",
            "60\n",
            "61\n",
            "62\n",
            "63\n",
            "64\n",
            "65\n",
            "66\n",
            "67\n",
            "68\n",
            "69\n",
            "70\n",
            "71\n",
            "72\n",
            "73\n",
            "74\n",
            "75\n",
            "76\n",
            "77\n",
            "78\n",
            "79\n",
            "80\n",
            "81\n",
            "82\n",
            "83\n",
            "84\n",
            "85\n",
            "86\n",
            "87\n",
            "88\n",
            "89\n",
            "90\n",
            "91\n",
            "92\n",
            "93\n",
            "94\n",
            "95\n",
            "96\n",
            "97\n",
            "98\n",
            "99\n",
            "100\n",
            "101\n",
            "102\n",
            "103\n",
            "104\n",
            "105\n",
            "106\n",
            "107\n",
            "108\n",
            "109\n",
            "110\n",
            "111\n",
            "112\n",
            "113\n",
            "114\n",
            "115\n",
            "116\n",
            "117\n",
            "118\n",
            "119\n",
            "120\n",
            "121\n",
            "122\n",
            "123\n",
            "124\n",
            "125\n",
            "126\n",
            "127\n",
            "128\n",
            "129\n",
            "130\n",
            "131\n",
            "132\n",
            "133\n",
            "134\n",
            "135\n",
            "136\n",
            "137\n",
            "138\n",
            "139\n",
            "140\n",
            "141\n",
            "142\n",
            "143\n",
            "144\n",
            "145\n",
            "146\n",
            "147\n",
            "148\n",
            "149\n",
            "150\n",
            "151\n",
            "152\n",
            "153\n",
            "154\n",
            "155\n",
            "156\n",
            "157\n",
            "158\n",
            "159\n",
            "160\n",
            "161\n",
            "162\n",
            "163\n",
            "164\n",
            "165\n",
            "166\n",
            "167\n",
            "168\n",
            "169\n",
            "170\n",
            "171\n",
            "172\n",
            "173\n",
            "174\n",
            "175\n",
            "176\n",
            "177\n",
            "178\n",
            "179\n",
            "180\n",
            "181\n",
            "182\n",
            "183\n",
            "184\n",
            "185\n",
            "186\n",
            "187\n",
            "188\n",
            "189\n",
            "190\n",
            "191\n",
            "192\n",
            "193\n",
            "194\n",
            "195\n",
            "196\n",
            "197\n",
            "198\n",
            "199\n",
            "200\n",
            "201\n",
            "202\n",
            "203\n",
            "204\n",
            "205\n",
            "206\n",
            "207\n",
            "208\n",
            "209\n",
            "210\n",
            "211\n",
            "212\n",
            "213\n",
            "214\n",
            "215\n",
            "216\n",
            "217\n",
            "218\n",
            "219\n",
            "220\n",
            "221\n",
            "222\n",
            "223\n",
            "224\n",
            "225\n",
            "226\n",
            "227\n",
            "228\n",
            "229\n",
            "230\n",
            "231\n",
            "232\n",
            "233\n",
            "234\n",
            "235\n",
            "236\n",
            "237\n",
            "238\n",
            "239\n",
            "240\n",
            "241\n",
            "242\n",
            "243\n",
            "244\n",
            "245\n",
            "246\n",
            "247\n",
            "248\n",
            "249\n",
            "250\n",
            "251\n",
            "252\n",
            "253\n",
            "254\n",
            "255\n",
            "256\n",
            "257\n",
            "258\n",
            "259\n",
            "260\n",
            "261\n",
            "262\n",
            "263\n",
            "264\n",
            "265\n",
            "266\n",
            "267\n",
            "268\n",
            "269\n",
            "270\n",
            "271\n",
            "272\n",
            "273\n",
            "274\n",
            "275\n",
            "276\n",
            "277\n",
            "278\n",
            "279\n",
            "280\n",
            "281\n",
            "282\n",
            "283\n",
            "284\n",
            "285\n",
            "286\n",
            "287\n",
            "288\n",
            "289\n",
            "290\n",
            "291\n",
            "292\n",
            "293\n",
            "294\n",
            "295\n",
            "296\n",
            "297\n",
            "298\n",
            "299\n",
            "300\n",
            "301\n",
            "302\n",
            "303\n",
            "304\n",
            "305\n",
            "306\n",
            "307\n",
            "308\n",
            "309\n",
            "310\n",
            "311\n",
            "312\n",
            "313\n",
            "314\n",
            "315\n",
            "316\n",
            "317\n",
            "318\n",
            "319\n",
            "320\n",
            "321\n",
            "322\n",
            "323\n",
            "324\n",
            "325\n",
            "326\n",
            "327\n",
            "328\n",
            "329\n",
            "330\n",
            "331\n",
            "332\n",
            "333\n",
            "334\n",
            "335\n",
            "336\n",
            "337\n",
            "338\n",
            "339\n",
            "340\n",
            "341\n",
            "342\n",
            "343\n",
            "344\n",
            "345\n",
            "346\n",
            "347\n",
            "348\n",
            "349\n",
            "350\n",
            "351\n",
            "352\n",
            "353\n",
            "354\n",
            "355\n",
            "356\n",
            "357\n",
            "358\n",
            "359\n",
            "360\n",
            "361\n",
            "362\n",
            "363\n",
            "364\n",
            "365\n",
            "366\n",
            "367\n",
            "368\n",
            "369\n",
            "370\n",
            "371\n",
            "372\n",
            "373\n",
            "374\n",
            "375\n",
            "376\n",
            "377\n",
            "378\n",
            "379\n",
            "380\n",
            "381\n",
            "382\n",
            "383\n",
            "384\n",
            "385\n",
            "386\n",
            "387\n",
            "388\n",
            "389\n",
            "390\n",
            "391\n",
            "392\n",
            "393\n",
            "394\n",
            "395\n",
            "396\n",
            "397\n",
            "398\n",
            "399\n",
            "400\n",
            "401\n",
            "402\n",
            "403\n",
            "404\n",
            "405\n",
            "406\n",
            "407\n",
            "408\n",
            "409\n",
            "410\n",
            "411\n",
            "412\n",
            "413\n",
            "414\n",
            "415\n",
            "416\n",
            "417\n",
            "418\n",
            "419\n",
            "420\n",
            "421\n",
            "422\n",
            "423\n",
            "424\n",
            "425\n",
            "426\n",
            "427\n",
            "428\n",
            "429\n",
            "430\n",
            "431\n",
            "432\n",
            "433\n",
            "434\n",
            "435\n",
            "436\n",
            "437\n",
            "438\n",
            "439\n",
            "440\n",
            "441\n",
            "442\n",
            "443\n",
            "444\n",
            "445\n",
            "446\n",
            "447\n",
            "448\n",
            "449\n",
            "450\n",
            "451\n",
            "452\n",
            "453\n",
            "454\n",
            "455\n",
            "456\n",
            "457\n",
            "458\n",
            "459\n",
            "460\n",
            "461\n",
            "462\n",
            "463\n",
            "464\n",
            "465\n",
            "466\n",
            "467\n",
            "468\n",
            "469\n",
            "470\n",
            "471\n",
            "472\n",
            "473\n",
            "474\n",
            "475\n",
            "476\n",
            "477\n",
            "478\n",
            "479\n",
            "480\n",
            "481\n",
            "482\n",
            "483\n",
            "484\n",
            "485\n",
            "486\n",
            "487\n",
            "488\n",
            "489\n",
            "490\n",
            "491\n",
            "492\n",
            "493\n",
            "494\n",
            "495\n",
            "496\n",
            "497\n",
            "498\n",
            "499\n",
            "500\n",
            "501\n",
            "502\n",
            "503\n",
            "504\n",
            "505\n",
            "506\n",
            "507\n",
            "508\n",
            "509\n",
            "510\n",
            "511\n",
            "512\n",
            "513\n",
            "514\n",
            "515\n",
            "516\n",
            "517\n",
            "518\n",
            "519\n",
            "520\n",
            "521\n",
            "522\n",
            "523\n",
            "524\n",
            "525\n",
            "526\n",
            "527\n",
            "528\n",
            "529\n",
            "530\n",
            "531\n",
            "532\n",
            "533\n",
            "534\n",
            "535\n",
            "536\n",
            "537\n",
            "538\n",
            "539\n",
            "540\n",
            "541\n",
            "542\n",
            "543\n",
            "544\n",
            "545\n",
            "546\n",
            "547\n",
            "548\n",
            "549\n",
            "550\n",
            "551\n",
            "552\n",
            "553\n",
            "554\n",
            "555\n",
            "556\n",
            "557\n",
            "558\n",
            "559\n",
            "560\n",
            "561\n",
            "562\n",
            "563\n",
            "564\n",
            "565\n",
            "566\n",
            "567\n",
            "568\n",
            "569\n",
            "570\n",
            "571\n",
            "572\n",
            "573\n",
            "574\n",
            "575\n",
            "576\n",
            "577\n",
            "578\n",
            "579\n",
            "580\n",
            "581\n",
            "582\n",
            "583\n",
            "584\n",
            "585\n",
            "586\n",
            "587\n",
            "588\n",
            "589\n",
            "590\n",
            "591\n",
            "592\n",
            "593\n",
            "594\n",
            "595\n",
            "596\n",
            "597\n",
            "598\n",
            "599\n",
            "600\n",
            "601\n",
            "602\n",
            "603\n",
            "604\n",
            "605\n",
            "606\n",
            "607\n",
            "608\n",
            "609\n",
            "610\n",
            "611\n",
            "612\n",
            "613\n",
            "614\n",
            "615\n",
            "616\n",
            "617\n",
            "618\n",
            "619\n",
            "620\n",
            "621\n",
            "622\n",
            "623\n",
            "624\n",
            "625\n",
            "626\n",
            "627\n",
            "628\n",
            "629\n",
            "630\n",
            "631\n",
            "632\n",
            "633\n",
            "634\n",
            "635\n",
            "636\n",
            "637\n",
            "638\n",
            "639\n",
            "640\n",
            "641\n",
            "642\n",
            "643\n",
            "644\n",
            "645\n",
            "646\n",
            "647\n",
            "648\n",
            "649\n",
            "650\n",
            "651\n",
            "652\n",
            "653\n",
            "654\n",
            "655\n",
            "656\n",
            "657\n",
            "658\n",
            "659\n",
            "660\n",
            "661\n",
            "662\n",
            "663\n",
            "664\n",
            "665\n",
            "666\n",
            "667\n",
            "668\n",
            "669\n",
            "670\n",
            "671\n",
            "672\n",
            "673\n",
            "674\n",
            "675\n",
            "676\n",
            "677\n",
            "678\n",
            "679\n",
            "680\n",
            "681\n",
            "682\n",
            "683\n",
            "684\n",
            "685\n",
            "686\n",
            "687\n",
            "688\n",
            "689\n",
            "690\n",
            "691\n",
            "692\n",
            "693\n",
            "694\n",
            "695\n",
            "696\n",
            "697\n",
            "698\n",
            "699\n",
            "700\n",
            "701\n",
            "702\n",
            "703\n",
            "704\n",
            "705\n",
            "706\n",
            "707\n",
            "708\n",
            "709\n",
            "710\n",
            "711\n",
            "712\n",
            "713\n",
            "714\n",
            "715\n",
            "716\n",
            "717\n",
            "718\n",
            "719\n",
            "720\n",
            "721\n",
            "722\n",
            "723\n",
            "724\n",
            "725\n",
            "726\n",
            "727\n",
            "728\n",
            "729\n",
            "730\n",
            "731\n",
            "732\n",
            "733\n",
            "734\n",
            "735\n",
            "736\n",
            "737\n",
            "738\n",
            "739\n",
            "740\n",
            "741\n",
            "742\n",
            "743\n",
            "744\n",
            "745\n",
            "746\n",
            "747\n",
            "748\n",
            "749\n",
            "750\n",
            "751\n",
            "752\n",
            "753\n",
            "754\n",
            "755\n",
            "756\n",
            "757\n",
            "758\n",
            "759\n",
            "760\n",
            "761\n",
            "762\n",
            "763\n",
            "764\n",
            "765\n",
            "766\n",
            "767\n",
            "768\n",
            "769\n",
            "770\n",
            "771\n",
            "772\n",
            "773\n",
            "774\n",
            "775\n",
            "776\n",
            "777\n",
            "778\n",
            "779\n",
            "780\n",
            "781\n",
            "782\n",
            "783\n",
            "784\n",
            "785\n",
            "786\n",
            "787\n",
            "788\n",
            "789\n",
            "790\n",
            "791\n",
            "792\n",
            "793\n",
            "794\n",
            "795\n",
            "796\n",
            "797\n",
            "798\n",
            "799\n",
            "800\n",
            "801\n",
            "802\n",
            "803\n",
            "804\n",
            "805\n",
            "806\n",
            "807\n",
            "808\n",
            "809\n",
            "810\n",
            "811\n",
            "812\n",
            "813\n",
            "814\n",
            "815\n",
            "816\n",
            "817\n",
            "818\n",
            "819\n",
            "820\n",
            "821\n",
            "822\n",
            "823\n",
            "824\n",
            "825\n",
            "826\n",
            "827\n",
            "828\n",
            "829\n",
            "830\n",
            "831\n",
            "832\n",
            "833\n",
            "834\n",
            "835\n",
            "836\n",
            "837\n",
            "838\n",
            "839\n",
            "840\n",
            "841\n",
            "842\n",
            "843\n",
            "844\n",
            "845\n",
            "846\n",
            "847\n",
            "848\n",
            "849\n",
            "850\n",
            "851\n",
            "852\n",
            "853\n",
            "854\n",
            "855\n",
            "856\n",
            "857\n",
            "858\n",
            "859\n",
            "860\n",
            "861\n",
            "862\n",
            "863\n",
            "864\n",
            "865\n",
            "866\n",
            "867\n",
            "868\n",
            "869\n",
            "870\n",
            "871\n",
            "872\n",
            "873\n",
            "874\n",
            "875\n",
            "876\n",
            "877\n",
            "878\n",
            "879\n",
            "880\n",
            "881\n",
            "882\n",
            "883\n",
            "884\n",
            "885\n",
            "886\n",
            "887\n",
            "888\n",
            "889\n",
            "890\n",
            "891\n",
            "892\n",
            "893\n",
            "894\n",
            "895\n",
            "896\n",
            "897\n",
            "898\n",
            "899\n",
            "900\n",
            "901\n",
            "902\n",
            "903\n",
            "904\n",
            "905\n",
            "906\n",
            "907\n",
            "908\n",
            "909\n",
            "910\n",
            "911\n",
            "912\n",
            "913\n",
            "914\n",
            "915\n",
            "916\n",
            "917\n",
            "918\n",
            "919\n",
            "920\n",
            "921\n",
            "922\n",
            "923\n",
            "924\n",
            "925\n",
            "926\n",
            "927\n",
            "928\n",
            "929\n",
            "930\n",
            "931\n",
            "932\n",
            "933\n",
            "934\n",
            "935\n",
            "936\n",
            "937\n",
            "938\n",
            "939\n",
            "940\n",
            "941\n",
            "942\n",
            "943\n",
            "944\n",
            "945\n",
            "946\n",
            "947\n",
            "948\n",
            "949\n",
            "950\n",
            "951\n",
            "952\n",
            "953\n",
            "954\n",
            "955\n",
            "956\n",
            "957\n",
            "958\n",
            "959\n",
            "960\n",
            "961\n",
            "962\n",
            "963\n",
            "964\n",
            "965\n",
            "966\n",
            "967\n",
            "968\n",
            "969\n",
            "970\n",
            "971\n",
            "972\n",
            "973\n",
            "974\n",
            "975\n",
            "976\n",
            "977\n",
            "978\n",
            "979\n",
            "980\n",
            "981\n",
            "982\n",
            "983\n",
            "984\n",
            "985\n",
            "986\n",
            "987\n",
            "988\n",
            "989\n",
            "990\n",
            "991\n",
            "992\n",
            "993\n",
            "994\n",
            "995\n",
            "996\n",
            "997\n",
            "998\n",
            "999\n",
            "1000\n",
            "1001\n",
            "1002\n",
            "1003\n",
            "1004\n",
            "1005\n",
            "1006\n",
            "1007\n",
            "1008\n",
            "1009\n",
            "1010\n",
            "1011\n",
            "1012\n",
            "1013\n",
            "1014\n",
            "1015\n",
            "1016\n",
            "1017\n",
            "1018\n",
            "1019\n",
            "1020\n",
            "1021\n",
            "1022\n",
            "1023\n",
            "1024\n",
            "1025\n",
            "1026\n",
            "1027\n",
            "1028\n",
            "1029\n",
            "1030\n",
            "1031\n",
            "1032\n",
            "1033\n",
            "1034\n",
            "1035\n",
            "1036\n",
            "1037\n",
            "1038\n",
            "1039\n",
            "1040\n",
            "1041\n",
            "1042\n",
            "1043\n",
            "1044\n",
            "1045\n",
            "1046\n",
            "1047\n",
            "1048\n",
            "1049\n",
            "1050\n",
            "1051\n",
            "1052\n",
            "1053\n",
            "1054\n",
            "1055\n",
            "1056\n",
            "1057\n",
            "1058\n",
            "1059\n",
            "1060\n",
            "1061\n",
            "1062\n",
            "1063\n",
            "1064\n",
            "1065\n",
            "1066\n",
            "1067\n",
            "1068\n",
            "1069\n",
            "1070\n",
            "1071\n",
            "1072\n",
            "1073\n",
            "1074\n",
            "1075\n",
            "1076\n",
            "1077\n",
            "1078\n",
            "1079\n",
            "1080\n",
            "1081\n",
            "1082\n",
            "1083\n",
            "1084\n",
            "1085\n",
            "1086\n",
            "1087\n",
            "1088\n",
            "1089\n",
            "1090\n",
            "1091\n",
            "1092\n",
            "1093\n",
            "1094\n",
            "1095\n",
            "1096\n",
            "1097\n",
            "1098\n",
            "1099\n",
            "1100\n",
            "1101\n",
            "1102\n",
            "1103\n",
            "1104\n",
            "1105\n",
            "1106\n",
            "1107\n",
            "1108\n",
            "1109\n",
            "1110\n",
            "1111\n",
            "1112\n",
            "1113\n",
            "1114\n",
            "1115\n",
            "1116\n",
            "1117\n",
            "1118\n",
            "1119\n",
            "1120\n",
            "1121\n",
            "1122\n",
            "1123\n",
            "1124\n",
            "1125\n",
            "1126\n",
            "1127\n",
            "1128\n",
            "1129\n",
            "1130\n",
            "1131\n",
            "1132\n",
            "1133\n",
            "1134\n",
            "1135\n",
            "1136\n",
            "1137\n",
            "1138\n",
            "1139\n",
            "1140\n",
            "1141\n",
            "1142\n",
            "1143\n",
            "1144\n",
            "1145\n",
            "1146\n",
            "1147\n",
            "1148\n",
            "1149\n",
            "1150\n",
            "1151\n",
            "1152\n",
            "1153\n",
            "1154\n",
            "1155\n",
            "1156\n",
            "1157\n",
            "1158\n",
            "1159\n",
            "1160\n",
            "1161\n",
            "1162\n",
            "1163\n",
            "1164\n",
            "1165\n",
            "1166\n",
            "1167\n",
            "1168\n",
            "1169\n",
            "1170\n",
            "1171\n",
            "1172\n",
            "1173\n",
            "1174\n",
            "1175\n",
            "1176\n",
            "1177\n",
            "1178\n",
            "1179\n",
            "1180\n",
            "1181\n",
            "1182\n",
            "1183\n",
            "1184\n",
            "1185\n",
            "1186\n",
            "1187\n",
            "1188\n",
            "1189\n",
            "1190\n",
            "1191\n",
            "1192\n",
            "1193\n",
            "1194\n",
            "1195\n",
            "1196\n",
            "1197\n",
            "1198\n",
            "1199\n",
            "1200\n",
            "1201\n",
            "1202\n",
            "1203\n",
            "1204\n",
            "1205\n",
            "1206\n",
            "1207\n",
            "1208\n",
            "1209\n",
            "1210\n",
            "1211\n",
            "1212\n",
            "1213\n",
            "1214\n",
            "1215\n",
            "1216\n",
            "1217\n",
            "1218\n",
            "1219\n",
            "1220\n",
            "1221\n",
            "1222\n",
            "1223\n",
            "1224\n",
            "1225\n",
            "1226\n",
            "1227\n",
            "1228\n",
            "1229\n",
            "1230\n",
            "1231\n",
            "1232\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "r = []\n",
        "for j in range(len(df_q)):\n",
        "  print(j)\n",
        "  sim = []\n",
        "  # embeddings_2 = model.encode(df_q.question[j], batch_size=1)\n",
        "  for i in range(len(df_q)):\n",
        "\n",
        "    similarity = a[i] @ b[j].T\n",
        "    sim.append(similarity)\n",
        "\n",
        "  r.append(np.argmax(sim))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "htvPmh2YAlkJ",
        "outputId": "ebadb727-a468-44d1-a663-a117aff7143e"
      },
      "execution_count": 117,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0\n",
            "1\n",
            "2\n",
            "3\n",
            "4\n",
            "5\n",
            "6\n",
            "7\n",
            "8\n",
            "9\n",
            "10\n",
            "11\n",
            "12\n",
            "13\n",
            "14\n",
            "15\n",
            "16\n",
            "17\n",
            "18\n",
            "19\n",
            "20\n",
            "21\n",
            "22\n",
            "23\n",
            "24\n",
            "25\n",
            "26\n",
            "27\n",
            "28\n",
            "29\n",
            "30\n",
            "31\n",
            "32\n",
            "33\n",
            "34\n",
            "35\n",
            "36\n",
            "37\n",
            "38\n",
            "39\n",
            "40\n",
            "41\n",
            "42\n",
            "43\n",
            "44\n",
            "45\n",
            "46\n",
            "47\n",
            "48\n",
            "49\n",
            "50\n",
            "51\n",
            "52\n",
            "53\n",
            "54\n",
            "55\n",
            "56\n",
            "57\n",
            "58\n",
            "59\n",
            "60\n",
            "61\n",
            "62\n",
            "63\n",
            "64\n",
            "65\n",
            "66\n",
            "67\n",
            "68\n",
            "69\n",
            "70\n",
            "71\n",
            "72\n",
            "73\n",
            "74\n",
            "75\n",
            "76\n",
            "77\n",
            "78\n",
            "79\n",
            "80\n",
            "81\n",
            "82\n",
            "83\n",
            "84\n",
            "85\n",
            "86\n",
            "87\n",
            "88\n",
            "89\n",
            "90\n",
            "91\n",
            "92\n",
            "93\n",
            "94\n",
            "95\n",
            "96\n",
            "97\n",
            "98\n",
            "99\n",
            "100\n",
            "101\n",
            "102\n",
            "103\n",
            "104\n",
            "105\n",
            "106\n",
            "107\n",
            "108\n",
            "109\n",
            "110\n",
            "111\n",
            "112\n",
            "113\n",
            "114\n",
            "115\n",
            "116\n",
            "117\n",
            "118\n",
            "119\n",
            "120\n",
            "121\n",
            "122\n",
            "123\n",
            "124\n",
            "125\n",
            "126\n",
            "127\n",
            "128\n",
            "129\n",
            "130\n",
            "131\n",
            "132\n",
            "133\n",
            "134\n",
            "135\n",
            "136\n",
            "137\n",
            "138\n",
            "139\n",
            "140\n",
            "141\n",
            "142\n",
            "143\n",
            "144\n",
            "145\n",
            "146\n",
            "147\n",
            "148\n",
            "149\n",
            "150\n",
            "151\n",
            "152\n",
            "153\n",
            "154\n",
            "155\n",
            "156\n",
            "157\n",
            "158\n",
            "159\n",
            "160\n",
            "161\n",
            "162\n",
            "163\n",
            "164\n",
            "165\n",
            "166\n",
            "167\n",
            "168\n",
            "169\n",
            "170\n",
            "171\n",
            "172\n",
            "173\n",
            "174\n",
            "175\n",
            "176\n",
            "177\n",
            "178\n",
            "179\n",
            "180\n",
            "181\n",
            "182\n",
            "183\n",
            "184\n",
            "185\n",
            "186\n",
            "187\n",
            "188\n",
            "189\n",
            "190\n",
            "191\n",
            "192\n",
            "193\n",
            "194\n",
            "195\n",
            "196\n",
            "197\n",
            "198\n",
            "199\n",
            "200\n",
            "201\n",
            "202\n",
            "203\n",
            "204\n",
            "205\n",
            "206\n",
            "207\n",
            "208\n",
            "209\n",
            "210\n",
            "211\n",
            "212\n",
            "213\n",
            "214\n",
            "215\n",
            "216\n",
            "217\n",
            "218\n",
            "219\n",
            "220\n",
            "221\n",
            "222\n",
            "223\n",
            "224\n",
            "225\n",
            "226\n",
            "227\n",
            "228\n",
            "229\n",
            "230\n",
            "231\n",
            "232\n",
            "233\n",
            "234\n",
            "235\n",
            "236\n",
            "237\n",
            "238\n",
            "239\n",
            "240\n",
            "241\n",
            "242\n",
            "243\n",
            "244\n",
            "245\n",
            "246\n",
            "247\n",
            "248\n",
            "249\n",
            "250\n",
            "251\n",
            "252\n",
            "253\n",
            "254\n",
            "255\n",
            "256\n",
            "257\n",
            "258\n",
            "259\n",
            "260\n",
            "261\n",
            "262\n",
            "263\n",
            "264\n",
            "265\n",
            "266\n",
            "267\n",
            "268\n",
            "269\n",
            "270\n",
            "271\n",
            "272\n",
            "273\n",
            "274\n",
            "275\n",
            "276\n",
            "277\n",
            "278\n",
            "279\n",
            "280\n",
            "281\n",
            "282\n",
            "283\n",
            "284\n",
            "285\n",
            "286\n",
            "287\n",
            "288\n",
            "289\n",
            "290\n",
            "291\n",
            "292\n",
            "293\n",
            "294\n",
            "295\n",
            "296\n",
            "297\n",
            "298\n",
            "299\n",
            "300\n",
            "301\n",
            "302\n",
            "303\n",
            "304\n",
            "305\n",
            "306\n",
            "307\n",
            "308\n",
            "309\n",
            "310\n",
            "311\n",
            "312\n",
            "313\n",
            "314\n",
            "315\n",
            "316\n",
            "317\n",
            "318\n",
            "319\n",
            "320\n",
            "321\n",
            "322\n",
            "323\n",
            "324\n",
            "325\n",
            "326\n",
            "327\n",
            "328\n",
            "329\n",
            "330\n",
            "331\n",
            "332\n",
            "333\n",
            "334\n",
            "335\n",
            "336\n",
            "337\n",
            "338\n",
            "339\n",
            "340\n",
            "341\n",
            "342\n",
            "343\n",
            "344\n",
            "345\n",
            "346\n",
            "347\n",
            "348\n",
            "349\n",
            "350\n",
            "351\n",
            "352\n",
            "353\n",
            "354\n",
            "355\n",
            "356\n",
            "357\n",
            "358\n",
            "359\n",
            "360\n",
            "361\n",
            "362\n",
            "363\n",
            "364\n",
            "365\n",
            "366\n",
            "367\n",
            "368\n",
            "369\n",
            "370\n",
            "371\n",
            "372\n",
            "373\n",
            "374\n",
            "375\n",
            "376\n",
            "377\n",
            "378\n",
            "379\n",
            "380\n",
            "381\n",
            "382\n",
            "383\n",
            "384\n",
            "385\n",
            "386\n",
            "387\n",
            "388\n",
            "389\n",
            "390\n",
            "391\n",
            "392\n",
            "393\n",
            "394\n",
            "395\n",
            "396\n",
            "397\n",
            "398\n",
            "399\n",
            "400\n",
            "401\n",
            "402\n",
            "403\n",
            "404\n",
            "405\n",
            "406\n",
            "407\n",
            "408\n",
            "409\n",
            "410\n",
            "411\n",
            "412\n",
            "413\n",
            "414\n",
            "415\n",
            "416\n",
            "417\n",
            "418\n",
            "419\n",
            "420\n",
            "421\n",
            "422\n",
            "423\n",
            "424\n",
            "425\n",
            "426\n",
            "427\n",
            "428\n",
            "429\n",
            "430\n",
            "431\n",
            "432\n",
            "433\n",
            "434\n",
            "435\n",
            "436\n",
            "437\n",
            "438\n",
            "439\n",
            "440\n",
            "441\n",
            "442\n",
            "443\n",
            "444\n",
            "445\n",
            "446\n",
            "447\n",
            "448\n",
            "449\n",
            "450\n",
            "451\n",
            "452\n",
            "453\n",
            "454\n",
            "455\n",
            "456\n",
            "457\n",
            "458\n",
            "459\n",
            "460\n",
            "461\n",
            "462\n",
            "463\n",
            "464\n",
            "465\n",
            "466\n",
            "467\n",
            "468\n",
            "469\n",
            "470\n",
            "471\n",
            "472\n",
            "473\n",
            "474\n",
            "475\n",
            "476\n",
            "477\n",
            "478\n",
            "479\n",
            "480\n",
            "481\n",
            "482\n",
            "483\n",
            "484\n",
            "485\n",
            "486\n",
            "487\n",
            "488\n",
            "489\n",
            "490\n",
            "491\n",
            "492\n",
            "493\n",
            "494\n",
            "495\n",
            "496\n",
            "497\n",
            "498\n",
            "499\n",
            "500\n",
            "501\n",
            "502\n",
            "503\n",
            "504\n",
            "505\n",
            "506\n",
            "507\n",
            "508\n",
            "509\n",
            "510\n",
            "511\n",
            "512\n",
            "513\n",
            "514\n",
            "515\n",
            "516\n",
            "517\n",
            "518\n",
            "519\n",
            "520\n",
            "521\n",
            "522\n",
            "523\n",
            "524\n",
            "525\n",
            "526\n",
            "527\n",
            "528\n",
            "529\n",
            "530\n",
            "531\n",
            "532\n",
            "533\n",
            "534\n",
            "535\n",
            "536\n",
            "537\n",
            "538\n",
            "539\n",
            "540\n",
            "541\n",
            "542\n",
            "543\n",
            "544\n",
            "545\n",
            "546\n",
            "547\n",
            "548\n",
            "549\n",
            "550\n",
            "551\n",
            "552\n",
            "553\n",
            "554\n",
            "555\n",
            "556\n",
            "557\n",
            "558\n",
            "559\n",
            "560\n",
            "561\n",
            "562\n",
            "563\n",
            "564\n",
            "565\n",
            "566\n",
            "567\n",
            "568\n",
            "569\n",
            "570\n",
            "571\n",
            "572\n",
            "573\n",
            "574\n",
            "575\n",
            "576\n",
            "577\n",
            "578\n",
            "579\n",
            "580\n",
            "581\n",
            "582\n",
            "583\n",
            "584\n",
            "585\n",
            "586\n",
            "587\n",
            "588\n",
            "589\n",
            "590\n",
            "591\n",
            "592\n",
            "593\n",
            "594\n",
            "595\n",
            "596\n",
            "597\n",
            "598\n",
            "599\n",
            "600\n",
            "601\n",
            "602\n",
            "603\n",
            "604\n",
            "605\n",
            "606\n",
            "607\n",
            "608\n",
            "609\n",
            "610\n",
            "611\n",
            "612\n",
            "613\n",
            "614\n",
            "615\n",
            "616\n",
            "617\n",
            "618\n",
            "619\n",
            "620\n",
            "621\n",
            "622\n",
            "623\n",
            "624\n",
            "625\n",
            "626\n",
            "627\n",
            "628\n",
            "629\n",
            "630\n",
            "631\n",
            "632\n",
            "633\n",
            "634\n",
            "635\n",
            "636\n",
            "637\n",
            "638\n",
            "639\n",
            "640\n",
            "641\n",
            "642\n",
            "643\n",
            "644\n",
            "645\n",
            "646\n",
            "647\n",
            "648\n",
            "649\n",
            "650\n",
            "651\n",
            "652\n",
            "653\n",
            "654\n",
            "655\n",
            "656\n",
            "657\n",
            "658\n",
            "659\n",
            "660\n",
            "661\n",
            "662\n",
            "663\n",
            "664\n",
            "665\n",
            "666\n",
            "667\n",
            "668\n",
            "669\n",
            "670\n",
            "671\n",
            "672\n",
            "673\n",
            "674\n",
            "675\n",
            "676\n",
            "677\n",
            "678\n",
            "679\n",
            "680\n",
            "681\n",
            "682\n",
            "683\n",
            "684\n",
            "685\n",
            "686\n",
            "687\n",
            "688\n",
            "689\n",
            "690\n",
            "691\n",
            "692\n",
            "693\n",
            "694\n",
            "695\n",
            "696\n",
            "697\n",
            "698\n",
            "699\n",
            "700\n",
            "701\n",
            "702\n",
            "703\n",
            "704\n",
            "705\n",
            "706\n",
            "707\n",
            "708\n",
            "709\n",
            "710\n",
            "711\n",
            "712\n",
            "713\n",
            "714\n",
            "715\n",
            "716\n",
            "717\n",
            "718\n",
            "719\n",
            "720\n",
            "721\n",
            "722\n",
            "723\n",
            "724\n",
            "725\n",
            "726\n",
            "727\n",
            "728\n",
            "729\n",
            "730\n",
            "731\n",
            "732\n",
            "733\n",
            "734\n",
            "735\n",
            "736\n",
            "737\n",
            "738\n",
            "739\n",
            "740\n",
            "741\n",
            "742\n",
            "743\n",
            "744\n",
            "745\n",
            "746\n",
            "747\n",
            "748\n",
            "749\n",
            "750\n",
            "751\n",
            "752\n",
            "753\n",
            "754\n",
            "755\n",
            "756\n",
            "757\n",
            "758\n",
            "759\n",
            "760\n",
            "761\n",
            "762\n",
            "763\n",
            "764\n",
            "765\n",
            "766\n",
            "767\n",
            "768\n",
            "769\n",
            "770\n",
            "771\n",
            "772\n",
            "773\n",
            "774\n",
            "775\n",
            "776\n",
            "777\n",
            "778\n",
            "779\n",
            "780\n",
            "781\n",
            "782\n",
            "783\n",
            "784\n",
            "785\n",
            "786\n",
            "787\n",
            "788\n",
            "789\n",
            "790\n",
            "791\n",
            "792\n",
            "793\n",
            "794\n",
            "795\n",
            "796\n",
            "797\n",
            "798\n",
            "799\n",
            "800\n",
            "801\n",
            "802\n",
            "803\n",
            "804\n",
            "805\n",
            "806\n",
            "807\n",
            "808\n",
            "809\n",
            "810\n",
            "811\n",
            "812\n",
            "813\n",
            "814\n",
            "815\n",
            "816\n",
            "817\n",
            "818\n",
            "819\n",
            "820\n",
            "821\n",
            "822\n",
            "823\n",
            "824\n",
            "825\n",
            "826\n",
            "827\n",
            "828\n",
            "829\n",
            "830\n",
            "831\n",
            "832\n",
            "833\n",
            "834\n",
            "835\n",
            "836\n",
            "837\n",
            "838\n",
            "839\n",
            "840\n",
            "841\n",
            "842\n",
            "843\n",
            "844\n",
            "845\n",
            "846\n",
            "847\n",
            "848\n",
            "849\n",
            "850\n",
            "851\n",
            "852\n",
            "853\n",
            "854\n",
            "855\n",
            "856\n",
            "857\n",
            "858\n",
            "859\n",
            "860\n",
            "861\n",
            "862\n",
            "863\n",
            "864\n",
            "865\n",
            "866\n",
            "867\n",
            "868\n",
            "869\n",
            "870\n",
            "871\n",
            "872\n",
            "873\n",
            "874\n",
            "875\n",
            "876\n",
            "877\n",
            "878\n",
            "879\n",
            "880\n",
            "881\n",
            "882\n",
            "883\n",
            "884\n",
            "885\n",
            "886\n",
            "887\n",
            "888\n",
            "889\n",
            "890\n",
            "891\n",
            "892\n",
            "893\n",
            "894\n",
            "895\n",
            "896\n",
            "897\n",
            "898\n",
            "899\n",
            "900\n",
            "901\n",
            "902\n",
            "903\n",
            "904\n",
            "905\n",
            "906\n",
            "907\n",
            "908\n",
            "909\n",
            "910\n",
            "911\n",
            "912\n",
            "913\n",
            "914\n",
            "915\n",
            "916\n",
            "917\n",
            "918\n",
            "919\n",
            "920\n",
            "921\n",
            "922\n",
            "923\n",
            "924\n",
            "925\n",
            "926\n",
            "927\n",
            "928\n",
            "929\n",
            "930\n",
            "931\n",
            "932\n",
            "933\n",
            "934\n",
            "935\n",
            "936\n",
            "937\n",
            "938\n",
            "939\n",
            "940\n",
            "941\n",
            "942\n",
            "943\n",
            "944\n",
            "945\n",
            "946\n",
            "947\n",
            "948\n",
            "949\n",
            "950\n",
            "951\n",
            "952\n",
            "953\n",
            "954\n",
            "955\n",
            "956\n",
            "957\n",
            "958\n",
            "959\n",
            "960\n",
            "961\n",
            "962\n",
            "963\n",
            "964\n",
            "965\n",
            "966\n",
            "967\n",
            "968\n",
            "969\n",
            "970\n",
            "971\n",
            "972\n",
            "973\n",
            "974\n",
            "975\n",
            "976\n",
            "977\n",
            "978\n",
            "979\n",
            "980\n",
            "981\n",
            "982\n",
            "983\n",
            "984\n",
            "985\n",
            "986\n",
            "987\n",
            "988\n",
            "989\n",
            "990\n",
            "991\n",
            "992\n",
            "993\n",
            "994\n",
            "995\n",
            "996\n",
            "997\n",
            "998\n",
            "999\n",
            "1000\n",
            "1001\n",
            "1002\n",
            "1003\n",
            "1004\n",
            "1005\n",
            "1006\n",
            "1007\n",
            "1008\n",
            "1009\n",
            "1010\n",
            "1011\n",
            "1012\n",
            "1013\n",
            "1014\n",
            "1015\n",
            "1016\n",
            "1017\n",
            "1018\n",
            "1019\n",
            "1020\n",
            "1021\n",
            "1022\n",
            "1023\n",
            "1024\n",
            "1025\n",
            "1026\n",
            "1027\n",
            "1028\n",
            "1029\n",
            "1030\n",
            "1031\n",
            "1032\n",
            "1033\n",
            "1034\n",
            "1035\n",
            "1036\n",
            "1037\n",
            "1038\n",
            "1039\n",
            "1040\n",
            "1041\n",
            "1042\n",
            "1043\n",
            "1044\n",
            "1045\n",
            "1046\n",
            "1047\n",
            "1048\n",
            "1049\n",
            "1050\n",
            "1051\n",
            "1052\n",
            "1053\n",
            "1054\n",
            "1055\n",
            "1056\n",
            "1057\n",
            "1058\n",
            "1059\n",
            "1060\n",
            "1061\n",
            "1062\n",
            "1063\n",
            "1064\n",
            "1065\n",
            "1066\n",
            "1067\n",
            "1068\n",
            "1069\n",
            "1070\n",
            "1071\n",
            "1072\n",
            "1073\n",
            "1074\n",
            "1075\n",
            "1076\n",
            "1077\n",
            "1078\n",
            "1079\n",
            "1080\n",
            "1081\n",
            "1082\n",
            "1083\n",
            "1084\n",
            "1085\n",
            "1086\n",
            "1087\n",
            "1088\n",
            "1089\n",
            "1090\n",
            "1091\n",
            "1092\n",
            "1093\n",
            "1094\n",
            "1095\n",
            "1096\n",
            "1097\n",
            "1098\n",
            "1099\n",
            "1100\n",
            "1101\n",
            "1102\n",
            "1103\n",
            "1104\n",
            "1105\n",
            "1106\n",
            "1107\n",
            "1108\n",
            "1109\n",
            "1110\n",
            "1111\n",
            "1112\n",
            "1113\n",
            "1114\n",
            "1115\n",
            "1116\n",
            "1117\n",
            "1118\n",
            "1119\n",
            "1120\n",
            "1121\n",
            "1122\n",
            "1123\n",
            "1124\n",
            "1125\n",
            "1126\n",
            "1127\n",
            "1128\n",
            "1129\n",
            "1130\n",
            "1131\n",
            "1132\n",
            "1133\n",
            "1134\n",
            "1135\n",
            "1136\n",
            "1137\n",
            "1138\n",
            "1139\n",
            "1140\n",
            "1141\n",
            "1142\n",
            "1143\n",
            "1144\n",
            "1145\n",
            "1146\n",
            "1147\n",
            "1148\n",
            "1149\n",
            "1150\n",
            "1151\n",
            "1152\n",
            "1153\n",
            "1154\n",
            "1155\n",
            "1156\n",
            "1157\n",
            "1158\n",
            "1159\n",
            "1160\n",
            "1161\n",
            "1162\n",
            "1163\n",
            "1164\n",
            "1165\n",
            "1166\n",
            "1167\n",
            "1168\n",
            "1169\n",
            "1170\n",
            "1171\n",
            "1172\n",
            "1173\n",
            "1174\n",
            "1175\n",
            "1176\n",
            "1177\n",
            "1178\n",
            "1179\n",
            "1180\n",
            "1181\n",
            "1182\n",
            "1183\n",
            "1184\n",
            "1185\n",
            "1186\n",
            "1187\n",
            "1188\n",
            "1189\n",
            "1190\n",
            "1191\n",
            "1192\n",
            "1193\n",
            "1194\n",
            "1195\n",
            "1196\n",
            "1197\n",
            "1198\n",
            "1199\n",
            "1200\n",
            "1201\n",
            "1202\n",
            "1203\n",
            "1204\n",
            "1205\n",
            "1206\n",
            "1207\n",
            "1208\n",
            "1209\n",
            "1210\n",
            "1211\n",
            "1212\n",
            "1213\n",
            "1214\n",
            "1215\n",
            "1216\n",
            "1217\n",
            "1218\n",
            "1219\n",
            "1220\n",
            "1221\n",
            "1222\n",
            "1223\n",
            "1224\n",
            "1225\n",
            "1226\n",
            "1227\n",
            "1228\n",
            "1229\n",
            "1230\n",
            "1231\n",
            "1232\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "pd.Series(r).to_csv(\"/content/testingbge1.csv\")"
      ],
      "metadata": {
        "id": "Z3NPFWhC_jIY"
      },
      "execution_count": 118,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "r[89]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "igfcjcJX3hLK",
        "outputId": "727a134e-0e9c-41c1-b2fa-7371d85a9129"
      },
      "execution_count": 98,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "216"
            ]
          },
          "metadata": {},
          "execution_count": 98
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!zip -r /content/file.zip /content/"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Uv7IYx_Cxy--",
        "outputId": "180b0536-4503-449c-e546-f29a6f0e9c45"
      },
      "execution_count": 94,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "  adding: content/ (stored 0%)\n",
            "  adding: content/.config/ (stored 0%)\n",
            "  adding: content/.config/gce (stored 0%)\n",
            "  adding: content/.config/config_sentinel (stored 0%)\n",
            "  adding: content/.config/.last_opt_in_prompt.yaml (stored 0%)\n",
            "  adding: content/.config/.last_update_check.json (deflated 22%)\n",
            "  adding: content/.config/.last_survey_prompt.yaml (stored 0%)\n",
            "  adding: content/.config/logs/ (stored 0%)\n",
            "  adding: content/.config/logs/2024.05.17/ (stored 0%)\n",
            "  adding: content/.config/logs/2024.05.17/13.37.02.659444.log (deflated 58%)\n",
            "  adding: content/.config/logs/2024.05.17/13.36.16.038415.log (deflated 91%)\n",
            "  adding: content/.config/logs/2024.05.17/13.36.52.953916.log (deflated 86%)\n",
            "  adding: content/.config/logs/2024.05.17/13.36.41.578276.log (deflated 58%)\n",
            "  adding: content/.config/logs/2024.05.17/13.37.14.902972.log (deflated 56%)\n",
            "  adding: content/.config/logs/2024.05.17/13.37.14.268709.log (deflated 57%)\n",
            "  adding: content/.config/default_configs.db (deflated 98%)\n",
            "  adding: content/.config/configurations/ (stored 0%)\n",
            "  adding: content/.config/configurations/config_default (deflated 15%)\n",
            "  adding: content/.config/active_config (stored 0%)\n",
            "  adding: content/tokenizer.json (deflated 71%)\n",
            "  adding: content/1_Pooling/ (stored 0%)\n",
            "  adding: content/1_Pooling/config.json (deflated 57%)\n",
            "  adding: content/all_questions_test_public.csv (deflated 68%)\n",
            "  adding: content/checkpoint-3000/ (stored 0%)\n",
            "  adding: content/checkpoint-3000/tokenizer.json (deflated 71%)\n",
            "  adding: content/checkpoint-3000/1_Pooling/ (stored 0%)\n",
            "  adding: content/checkpoint-3000/1_Pooling/config.json (deflated 57%)\n",
            "  adding: content/checkpoint-3000/scheduler.pt (deflated 55%)\n",
            "  adding: content/checkpoint-3000/trainer_state.json (deflated 82%)\n",
            "  adding: content/checkpoint-3000/README.md (deflated 54%)\n",
            "  adding: content/checkpoint-3000/config_sentence_transformers.json (deflated 31%)\n",
            "  adding: content/checkpoint-3000/2_Normalize/ (stored 0%)\n",
            "  adding: content/checkpoint-3000/model.safetensors (deflated 11%)\n",
            "  adding: content/checkpoint-3000/tokenizer_config.json (deflated 75%)\n",
            "  adding: content/checkpoint-3000/sentence_bert_config.json (deflated 4%)\n",
            "  adding: content/checkpoint-3000/config.json (deflated 49%)\n",
            "  adding: content/checkpoint-3000/special_tokens_map.json (deflated 80%)\n",
            "  adding: content/checkpoint-3000/modules.json (deflated 62%)\n",
            "  adding: content/checkpoint-3000/vocab.txt (deflated 53%)\n",
            "  adding: content/checkpoint-3000/training_args.bin (deflated 50%)\n",
            "  adding: content/checkpoint-3000/rng_state.pth (deflated 25%)\n",
            "  adding: content/checkpoint-3000/optimizer.pt (deflated 17%)\n",
            "  adding: content/data.jsonl (deflated 66%)\n",
            "  adding: content/checkpoint-1000/ (stored 0%)\n",
            "  adding: content/checkpoint-1000/tokenizer.json (deflated 71%)\n",
            "  adding: content/checkpoint-1000/1_Pooling/ (stored 0%)\n",
            "  adding: content/checkpoint-1000/1_Pooling/config.json (deflated 57%)\n",
            "  adding: content/checkpoint-1000/scheduler.pt (deflated 55%)\n",
            "  adding: content/checkpoint-1000/trainer_state.json (deflated 80%)\n",
            "  adding: content/checkpoint-1000/README.md (deflated 54%)\n",
            "  adding: content/checkpoint-1000/config_sentence_transformers.json (deflated 31%)\n",
            "  adding: content/checkpoint-1000/2_Normalize/ (stored 0%)\n",
            "  adding: content/checkpoint-1000/model.safetensors (deflated 11%)\n",
            "  adding: content/checkpoint-1000/tokenizer_config.json (deflated 75%)\n",
            "  adding: content/checkpoint-1000/sentence_bert_config.json (deflated 4%)\n",
            "  adding: content/checkpoint-1000/config.json (deflated 49%)\n",
            "  adding: content/checkpoint-1000/special_tokens_map.json (deflated 80%)\n",
            "  adding: content/checkpoint-1000/modules.json (deflated 62%)\n",
            "  adding: content/checkpoint-1000/vocab.txt (deflated 53%)\n",
            "  adding: content/checkpoint-1000/training_args.bin (deflated 50%)\n",
            "  adding: content/checkpoint-1000/rng_state.pth (deflated 25%)\n",
            "  adding: content/checkpoint-1000/optimizer.pt (deflated 17%)\n",
            "  adding: content/README.md (deflated 54%)\n",
            "  adding: content/runs/ (stored 0%)\n",
            "  adding: content/runs/May20_19-30-07_152b3333fcfe/ (stored 0%)\n",
            "  adding: content/runs/May20_19-30-07_152b3333fcfe/events.out.tfevents.1716233420.152b3333fcfe.21997.0 (deflated 61%)\n",
            "  adding: content/runs/May20_19-35-37_152b3333fcfe/ (stored 0%)\n",
            "  adding: content/runs/May20_19-35-37_152b3333fcfe/events.out.tfevents.1716233739.152b3333fcfe.23412.0 (deflated 61%)\n",
            "  adding: content/runs/May20_19-45-31_152b3333fcfe/ (stored 0%)\n",
            "  adding: content/runs/May20_19-45-31_152b3333fcfe/events.out.tfevents.1716234334.152b3333fcfe.25997.0 (deflated 70%)\n",
            "  adding: content/runs/May20_19-41-56_152b3333fcfe/ (stored 0%)\n",
            "  adding: content/runs/May20_19-41-56_152b3333fcfe/events.out.tfevents.1716234118.152b3333fcfe.25050.0 (deflated 61%)\n",
            "  adding: content/runs/May20_19-42-39_152b3333fcfe/ (stored 0%)\n",
            "  adding: content/runs/May20_19-42-39_152b3333fcfe/events.out.tfevents.1716234161.152b3333fcfe.25257.0 (deflated 61%)\n",
            "  adding: content/runs/May20_19-38-01_152b3333fcfe/ (stored 0%)\n",
            "  adding: content/runs/May20_19-38-01_152b3333fcfe/events.out.tfevents.1716233883.152b3333fcfe.24035.0 (deflated 61%)\n",
            "  adding: content/all_answers_test_public.csv (deflated 65%)\n",
            "  adding: content/config_sentence_transformers.json (deflated 31%)\n",
            "  adding: content/2_Normalize/ (stored 0%)\n",
            "  adding: content/all_articles_with_questions_train.csv (deflated 69%)\n",
            "  adding: content/model.safetensors (deflated 11%)\n",
            "  adding: content/tokenizer_config.json (deflated 75%)\n",
            "  adding: content/sentence_bert_config.json (deflated 4%)\n",
            "  adding: content/config.json (deflated 48%)\n",
            "  adding: content/special_tokens_map.json (deflated 80%)\n",
            "  adding: content/modules.json (deflated 62%)\n",
            "  adding: content/vocab.txt (deflated 53%)\n",
            "  adding: content/FlagEmbedding/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/build/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/build/bdist.linux-x86_64/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/build/lib/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/bge_m3.py (deflated 77%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/baai_general_embedding/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/baai_general_embedding/__init__.py (stored 0%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/baai_general_embedding/finetune/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/baai_general_embedding/finetune/modeling.py (deflated 70%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/baai_general_embedding/finetune/arguments.py (deflated 67%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/baai_general_embedding/finetune/data.py (deflated 71%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/baai_general_embedding/finetune/eval_msmarco.py (deflated 71%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/baai_general_embedding/finetune/run.py (deflated 67%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/baai_general_embedding/finetune/__init__.py (deflated 27%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/baai_general_embedding/finetune/hn_mine.py (deflated 68%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/baai_general_embedding/finetune/trainer.py (deflated 63%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/baai_general_embedding/retromae_pretrain/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/baai_general_embedding/retromae_pretrain/modeling.py (deflated 70%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/baai_general_embedding/retromae_pretrain/arguments.py (deflated 62%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/baai_general_embedding/retromae_pretrain/enhancedDecoder.py (deflated 79%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/baai_general_embedding/retromae_pretrain/data.py (deflated 73%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/baai_general_embedding/retromae_pretrain/run.py (deflated 66%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/baai_general_embedding/retromae_pretrain/utils.py (deflated 74%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/baai_general_embedding/retromae_pretrain/__init__.py (stored 0%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/baai_general_embedding/retromae_pretrain/trainer.py (deflated 59%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/flag_reranker.py (deflated 85%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/visual/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/visual/modeling.py (deflated 74%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/visual/__init__.py (stored 0%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/visual/eva_clip/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/visual/eva_clip/model.py (deflated 75%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/visual/eva_clip/openai.py (deflated 65%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/visual/eva_clip/timm_model.py (deflated 66%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/visual/eva_clip/tokenizer.py (deflated 63%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/visual/eva_clip/utils.py (deflated 79%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/visual/eva_clip/transform.py (deflated 65%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/visual/eva_clip/__init__.py (deflated 59%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/visual/eva_clip/constants.py (deflated 22%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/visual/eva_clip/loss.py (deflated 78%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/visual/eva_clip/transformer.py (deflated 80%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/visual/eva_clip/factory.py (deflated 81%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/visual/eva_clip/pretrained.py (deflated 76%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/visual/eva_clip/rope.py (deflated 74%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/visual/eva_clip/hf_configs.py (deflated 77%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/visual/eva_clip/hf_model.py (deflated 74%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/visual/eva_clip/eva_vit_model.py (deflated 78%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/visual/eva_clip/modified_resnet.py (deflated 71%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/flag_models.py (deflated 82%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/__init__.py (deflated 40%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/BGE_M3/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/BGE_M3/modeling.py (deflated 79%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/BGE_M3/arguments.py (deflated 70%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/BGE_M3/split_data_by_length.py (deflated 72%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/BGE_M3/data.py (deflated 77%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/BGE_M3/run.py (deflated 69%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/BGE_M3/__init__.py (deflated 21%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/BGE_M3/trainer.py (deflated 63%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/llm_reranker/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/llm_reranker/finetune_for_layerwise/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/llm_reranker/finetune_for_layerwise/modeling.py (deflated 69%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/llm_reranker/finetune_for_layerwise/arguments.py (deflated 71%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/llm_reranker/finetune_for_layerwise/data.py (deflated 77%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/llm_reranker/finetune_for_layerwise/run.py (deflated 67%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/llm_reranker/finetune_for_layerwise/__init__.py (stored 0%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/llm_reranker/finetune_for_layerwise/modeling_minicpm_reranker.py (deflated 79%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/llm_reranker/finetune_for_layerwise/configuration_minicpm_reranker.py (deflated 66%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/llm_reranker/finetune_for_layerwise/trainer.py (deflated 60%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/llm_reranker/finetune_for_layerwise/load_model.py (deflated 79%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/llm_reranker/merge/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/llm_reranker/merge/merge_layerwise_model_from_raw_model.py (deflated 77%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/llm_reranker/merge/__init__.py (deflated 59%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/llm_reranker/merge/modeling_minicpm_reranker.py (deflated 79%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/llm_reranker/merge/merge_base_model.py (deflated 75%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/llm_reranker/merge/merge_layerwise_model_from_finetuned_model.py (deflated 74%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/llm_reranker/merge/configuration_minicpm_reranker.py (deflated 66%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/llm_reranker/__init__.py (stored 0%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/llm_reranker/finetune_for_instruction/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/llm_reranker/finetune_for_instruction/modeling.py (deflated 67%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/llm_reranker/finetune_for_instruction/arguments.py (deflated 72%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/llm_reranker/finetune_for_instruction/data.py (deflated 76%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/llm_reranker/finetune_for_instruction/run.py (deflated 67%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/llm_reranker/finetune_for_instruction/__init__.py (stored 0%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/llm_reranker/finetune_for_instruction/trainer.py (deflated 60%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/llm_reranker/finetune_for_instruction/load_model.py (deflated 64%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/reranker/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/reranker/modeling.py (deflated 67%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/reranker/arguments.py (deflated 60%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/reranker/data.py (deflated 68%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/reranker/run.py (deflated 67%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/reranker/__init__.py (stored 0%)\n",
            "  adding: content/FlagEmbedding/build/lib/FlagEmbedding/reranker/trainer.py (deflated 54%)\n",
            "  adding: content/FlagEmbedding/.DS_Store (deflated 93%)\n",
            "  adding: content/FlagEmbedding/README_zh.md (deflated 72%)\n",
            "  adding: content/FlagEmbedding/README.md (deflated 78%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/contrib/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/contrib/big_batch_search.py (deflated 74%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/contrib/evaluation.py (deflated 69%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/contrib/exhaustive_search.py (deflated 70%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/contrib/client_server.py (deflated 65%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/contrib/rpc.py (deflated 64%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/contrib/inspect_tools.py (deflated 62%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/contrib/README.md (deflated 53%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/contrib/__init__.py (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/contrib/datasets.py (deflated 75%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/contrib/vecs_io.py (deflated 60%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/contrib/ondisk.py (deflated 58%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/contrib/ivf_tools.py (deflated 69%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/contrib/clustering.py (deflated 67%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/contrib/factory_tools.py (deflated 75%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/contrib/torch_utils.py (deflated 83%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/misc/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/misc/test_blas.cpp (deflated 62%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/bench_pairwise_distances.py (deflated 41%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/bench_fw_ivf.py (deflated 74%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/kmeans_mnist.py (deflated 54%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/bench_gpu_1bn.py (deflated 71%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/bench_hybrid_cpu_gpu.py (deflated 78%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/bench_fw_notebook.ipynb (deflated 81%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/bench_pq_tables.py (deflated 55%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/bench_ivf_fastscan.py (deflated 58%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/bench_index_pq.py (deflated 36%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/bench_hnsw.py (deflated 70%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/bench_fw/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/bench_fw/index.py (deflated 82%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/bench_fw/benchmark_io.py (deflated 74%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/bench_fw/descriptors.py (deflated 64%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/bench_fw/utils.py (deflated 67%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/bench_fw/__init__.py (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/bench_fw/optimize.py (deflated 78%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/bench_fw/benchmark.py (deflated 79%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/bench_pq_transposed_centroid_table.py (deflated 68%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/README.md (deflated 64%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/bench_fw_codecs.py (deflated 73%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/bench_fw_range.py (deflated 68%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/bench_polysemous_1bn.py (deflated 65%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/bench_ivf_selector.cpp (deflated 71%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/bench_vector_ops.py (deflated 68%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/bench_partition.py (deflated 63%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/bench_cppcontrib_sa_decode.cpp (deflated 94%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/datasets.py (deflated 49%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/distributed_ondisk/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/distributed_ondisk/combined_index.py (deflated 69%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/distributed_ondisk/make_index_vslice.py (deflated 58%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/distributed_ondisk/search_server.py (deflated 69%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/distributed_ondisk/distributed_query_demo.py (deflated 49%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/distributed_ondisk/merge_to_ondisk.py (deflated 63%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/distributed_ondisk/README.md (deflated 61%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/distributed_ondisk/make_trained_index.py (deflated 48%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/distributed_ondisk/run_on_cluster.bash (deflated 70%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/distributed_ondisk/distributed_kmeans.py (deflated 66%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/bench_big_batch_ivf.py (deflated 58%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/bench_index_flat.py (deflated 59%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/bench_hamming_computer.cpp (deflated 79%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/bench_ivfpq_raft.py (deflated 71%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/bench_scalar_quantizer.py (deflated 68%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/bench_gpu_sift1m.py (deflated 60%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/bench_polysemous_sift1m.py (deflated 48%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/bench_ivf_fastscan_single_query.py (deflated 60%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/bench_quantizer.py (deflated 68%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/bench_heap_replace.cpp (deflated 74%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/link_and_code/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/link_and_code/README.md (deflated 39%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/bench_6bit_codec.cpp (deflated 58%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/bench_all_ivf/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/bench_all_ivf/README.md (deflated 44%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/bench_all_ivf/run_on_cluster_generic.bash (deflated 82%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/bench_all_ivf/make_groundtruth.py (deflated 42%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/bench_all_ivf/cmp_with_scann.py (deflated 71%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/bench_all_ivf/parse_bench_all_ivf.py (deflated 72%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/bench_all_ivf/bench_kmeans.py (deflated 61%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/bench_all_ivf/bench_all_ivf.py (deflated 72%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/bench_all_ivf/datasets_oss.py (deflated 64%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/CMakeLists.txt (deflated 33%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/bench_for_interrupt.py (deflated 63%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/bench_hamming_knn.py (deflated 51%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/bench_fw_optimize.py (deflated 59%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/benchs/bench_ivfflat_raft.py (deflated 77%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexBinaryIVF.h (deflated 70%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexIVFAdditiveQuantizer.h (deflated 80%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexIVFIndependentQuantizer.cpp (deflated 70%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexFlatCodes.cpp (deflated 67%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/impl/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/impl/Quantizer.h (deflated 59%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/impl/LookupTableScaler.h (deflated 74%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/impl/FaissException.cpp (deflated 63%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/impl/ProductQuantizer.h (deflated 71%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/impl/index_write.cpp (deflated 81%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/impl/ScalarQuantizer.cpp (deflated 85%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/impl/code_distance/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/impl/code_distance/code_distance.h (deflated 77%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/impl/code_distance/code_distance-generic.h (deflated 69%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/impl/code_distance/code_distance_avx512.h (deflated 70%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/impl/code_distance/code_distance-avx2.h (deflated 86%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/impl/ResidualQuantizer.h (deflated 65%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/impl/index_read.cpp (deflated 80%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/impl/NSG.cpp (deflated 74%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/impl/ProductQuantizer-inl.h (deflated 73%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/impl/kmeans1d.h (deflated 48%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/impl/ProductQuantizer.cpp (deflated 79%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/impl/ScalarQuantizer.h (deflated 63%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/impl/lattice_Zn.cpp (deflated 76%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/impl/lattice_Zn.h (deflated 66%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/impl/LocalSearchQuantizer.cpp (deflated 77%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/impl/IDSelector.cpp (deflated 71%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/impl/AuxIndexStructures.h (deflated 62%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/impl/PolysemousTraining.cpp (deflated 79%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/impl/ResidualQuantizer.cpp (deflated 75%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/impl/simd_result_handlers.h (deflated 78%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/impl/FaissAssert.h (deflated 83%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/impl/FaissException.h (deflated 54%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/impl/HNSW.h (deflated 64%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/impl/pq4_fast_scan_search_qbs.cpp (deflated 86%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/impl/pq4_fast_scan_search_1.cpp (deflated 77%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/impl/kmeans1d.cpp (deflated 67%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/impl/io_macros.h (deflated 78%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/impl/CodePacker.cpp (deflated 69%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/impl/LocalSearchQuantizer.h (deflated 71%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/impl/HNSW.cpp (deflated 77%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/impl/ThreadedIndex.h (deflated 60%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/impl/ProductAdditiveQuantizer.cpp (deflated 77%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/impl/AdditiveQuantizer.h (deflated 70%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/impl/DistanceComputer.h (deflated 64%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/impl/NNDescent.cpp (deflated 73%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/impl/AdditiveQuantizer.cpp (deflated 78%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/impl/ProductAdditiveQuantizer.h (deflated 74%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/impl/CodePacker.h (deflated 68%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/impl/IDSelector.h (deflated 70%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/impl/pq4_fast_scan.h (deflated 69%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/impl/NNDescent.h (deflated 62%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/impl/ResultHandler.h (deflated 79%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/impl/residual_quantizer_encode_steps.cpp (deflated 82%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/impl/ThreadedIndex-inl.h (deflated 71%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/impl/io.cpp (deflated 74%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/impl/io.h (deflated 69%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/impl/residual_quantizer_encode_steps.h (deflated 75%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/impl/PolysemousTraining.h (deflated 63%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/impl/NSG.h (deflated 65%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/impl/pq4_fast_scan.cpp (deflated 77%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/impl/platform_macros.h (deflated 65%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/impl/AuxIndexStructures.cpp (deflated 70%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexRefine.cpp (deflated 79%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexFlatCodes.h (deflated 58%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexScalarQuantizer.h (deflated 66%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexReplicas.cpp (deflated 73%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexFastScan.cpp (deflated 76%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/Index.cpp (deflated 70%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexLSH.h (deflated 57%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/index_io.h (deflated 64%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexIVFPQ.cpp (deflated 79%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexNNDescent.cpp (deflated 69%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexBinaryHash.h (deflated 70%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexBinaryHNSW.cpp (deflated 69%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexLattice.cpp (deflated 68%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/Index2Layer.h (deflated 57%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/cppcontrib/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/cppcontrib/SaDecodeKernels.h (deflated 79%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/cppcontrib/sa_decode/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/cppcontrib/sa_decode/PQ-avx2-inl.h (deflated 95%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/cppcontrib/sa_decode/Level2-avx2-inl.h (deflated 95%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/cppcontrib/sa_decode/MinMax-inl.h (deflated 93%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/cppcontrib/sa_decode/Level2-neon-inl.h (deflated 95%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/cppcontrib/sa_decode/MinMaxFP16-inl.h (deflated 94%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/cppcontrib/sa_decode/PQ-inl.h (deflated 89%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/cppcontrib/sa_decode/PQ-neon-inl.h (deflated 94%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/cppcontrib/sa_decode/Level2-inl.h (deflated 91%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/cppcontrib/detail/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/cppcontrib/detail/UintReader.h (deflated 89%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/cppcontrib/detail/CoarseBitType.h (deflated 48%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexIVFAdditiveQuantizerFastScan.h (deflated 75%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexBinary.h (deflated 67%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/MetaIndexes.h (deflated 63%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/VectorTransform.h (deflated 69%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexBinaryFlat.cpp (deflated 67%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexIVFFlat.h (deflated 66%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/AutoTune.cpp (deflated 76%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexIVFAdditiveQuantizerFastScan.cpp (deflated 76%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/Clustering.cpp (deflated 73%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexPQFastScan.cpp (deflated 61%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexIDMap.cpp (deflated 75%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexNSG.h (deflated 65%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexScalarQuantizer.cpp (deflated 75%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexBinaryIVF.cpp (deflated 79%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexIVFPQFastScan.cpp (deflated 75%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexNNDescent.h (deflated 59%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/utils/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/utils/WorkerThread.h (deflated 57%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/utils/quantize_lut.cpp (deflated 81%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/utils/simdlib_emulated.h (deflated 82%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/utils/AlignedTable.h (deflated 71%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/utils/utils.cpp (deflated 71%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/utils/prefetch.h (deflated 74%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/utils/simdlib_avx512.h (deflated 76%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/utils/approx_topk/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/utils/approx_topk/approx_topk.h (deflated 59%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/utils/approx_topk/avx2-inl.h (deflated 77%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/utils/approx_topk/generic.h (deflated 73%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/utils/approx_topk/mode.h (deflated 47%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/utils/simdlib.h (deflated 50%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/utils/random.h (deflated 58%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/utils/distances.h (deflated 81%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/utils/extra_distances.h (deflated 60%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/utils/utils.h (deflated 64%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/utils/extra_distances-inl.h (deflated 73%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/utils/WorkerThread.cpp (deflated 62%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/utils/sorting.cpp (deflated 78%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/utils/extra_distances.cpp (deflated 77%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/utils/fp16.h (deflated 43%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/utils/hamming-inl.h (deflated 66%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/utils/fp16-inl.h (deflated 54%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/utils/simdlib_ppc64.h (deflated 82%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/utils/hamming_distance/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/utils/hamming_distance/generic-inl.h (deflated 83%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/utils/hamming_distance/neon-inl.h (deflated 81%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/utils/hamming_distance/avx2-inl.h (deflated 81%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/utils/hamming_distance/hamdis-inl.h (deflated 67%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/utils/hamming_distance/common.h (deflated 66%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/utils/simdlib_avx2.h (deflated 81%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/utils/ordered_key_value.h (deflated 67%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/utils/hamming.h (deflated 73%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/utils/approx_topk_hamming/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/utils/approx_topk_hamming/approx_topk_hamming.h (deflated 85%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/utils/simdlib_neon.h (deflated 85%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/utils/partitioning.cpp (deflated 80%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/utils/Heap.cpp (deflated 74%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/utils/sorting.h (deflated 64%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/utils/fp16-fp16c.h (deflated 42%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/utils/distances.cpp (deflated 83%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/utils/Heap.h (deflated 77%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/utils/transpose/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/utils/transpose/transpose-avx2-inl.h (deflated 76%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/utils/random.cpp (deflated 75%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/utils/partitioning.h (deflated 57%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/utils/distances_simd.cpp (deflated 87%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/utils/quantize_lut.h (deflated 65%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/utils/distances_fused/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/utils/distances_fused/avx512.cpp (deflated 74%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/utils/distances_fused/distances_fused.cpp (deflated 54%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/utils/distances_fused/distances_fused.h (deflated 47%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/utils/distances_fused/simdlib_based.h (deflated 46%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/utils/distances_fused/simdlib_based.cpp (deflated 73%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/utils/distances_fused/avx512.h (deflated 46%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/utils/fp16-arm.h (deflated 50%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/utils/hamming.cpp (deflated 79%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexShards.cpp (deflated 74%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/AutoTune.h (deflated 66%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexIVFAdditiveQuantizer.cpp (deflated 80%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexFlat.cpp (deflated 81%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexIVFPQFastScan.h (deflated 60%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/GpuFaissAssert.h (deflated 57%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/GpuIcmEncoder.cu (deflated 64%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/impl/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/impl/PQScanMultiPassNoPrecomputed.cuh (deflated 61%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/impl/IVFFlatScan.cu (deflated 77%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/impl/RaftIVFPQ.cuh (deflated 62%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/impl/RemapIndices.h (deflated 45%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/impl/L2Select.cuh (deflated 47%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/impl/PQCodeLoad.cuh (deflated 89%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/impl/VectorResidual.cuh (deflated 73%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/impl/VectorResidual.cu (deflated 80%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/impl/IndexUtils.h (deflated 43%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/impl/IndexUtils.cu (deflated 53%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/impl/L2Norm.cu (deflated 74%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/impl/BinaryDistance.cu (deflated 80%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/impl/IVFAppend.cu (deflated 80%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/impl/RaftFlatIndex.cuh (deflated 59%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/impl/FlatIndex.cuh (deflated 64%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/impl/BinaryFlatIndex.cuh (deflated 57%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/impl/IVFBase.cu (deflated 78%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/impl/IVFFlat.cu (deflated 76%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/impl/IVFAppend.cuh (deflated 78%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/impl/RaftIVFFlat.cu (deflated 75%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/impl/IcmEncoder.cuh (deflated 65%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/impl/PQScanMultiPassPrecomputed.cuh (deflated 61%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/impl/IVFUtilsSelect1.cu (deflated 74%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/impl/IVFInterleaved.cuh (deflated 71%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/impl/IcmEncoder.cu (deflated 74%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/impl/Distance.cuh (deflated 88%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/impl/PQScanMultiPassNoPrecomputed-inl.cuh (deflated 79%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/impl/InterleavedCodes.cpp (deflated 86%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/impl/RaftIVFPQ.cu (deflated 75%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/impl/IVFBase.cuh (deflated 71%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/impl/BinaryFlatIndex.cu (deflated 65%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/impl/InterleavedCodes.h (deflated 69%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/impl/IVFPQ.cuh (deflated 72%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/impl/IVFPQ.cu (deflated 80%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/impl/L2Select.cu (deflated 74%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/impl/IVFUtils.cu (deflated 65%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/impl/IVFUtilsSelect2.cu (deflated 73%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/impl/GpuScalarQuantizer.cuh (deflated 88%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/impl/IVFFlatScan.cuh (deflated 59%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/impl/PQCodeDistances-inl.cuh (deflated 80%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/impl/BroadcastSum.cu (deflated 85%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/impl/BroadcastSum.cuh (deflated 71%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/impl/PQCodeDistances.cuh (deflated 54%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/impl/BinaryDistance.cuh (deflated 46%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/impl/Distance.cu (deflated 84%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/impl/IVFUtils.cuh (deflated 66%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/impl/DistanceUtils.cuh (deflated 78%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/impl/RemapIndices.cpp (deflated 55%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/impl/L2Norm.cuh (deflated 56%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/impl/scan/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/impl/scan/IVFInterleavedScanKernelTemplate.cu (deflated 70%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/impl/scan/IVFInterleavedImpl.cuh (deflated 87%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/impl/IVFFlat.cuh (deflated 69%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/impl/FlatIndex.cu (deflated 77%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/impl/PQScanMultiPassPrecomputed.cu (deflated 78%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/impl/RaftIVFFlat.cuh (deflated 63%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/impl/IVFInterleaved.cu (deflated 70%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/impl/GeneralDistance.cuh (deflated 77%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/impl/RaftFlatIndex.cu (deflated 68%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/GpuIndexIVFScalarQuantizer.h (deflated 68%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/GpuIndexFlat.cu (deflated 80%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/GpuIndexIVF.cu (deflated 74%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/GpuIcmEncoder.h (deflated 58%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/GpuIndexBinaryFlat.cu (deflated 72%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/GpuIndexBinaryFlat.h (deflated 66%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/test/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/test/TestCodePacking.cpp (deflated 85%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/test/torch_test_contrib_gpu.py (deflated 84%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/test/test_gpu_index_ivfsq.py (deflated 75%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/test/TestGpuIndexIVFScalarQuantizer.cpp (deflated 77%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/test/test_gpu_index_ivfflat.py (deflated 47%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/test/demo_ivfpq_indexing_gpu.cpp (deflated 65%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/test/TestUtils.cpp (deflated 74%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/test/test_contrib_gpu.py (deflated 73%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/test/TestGpuIndexIVFPQ.cpp (deflated 85%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/test/TestGpuSelect.cu (deflated 74%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/test/TestGpuMemoryException.cpp (deflated 65%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/test/test_multi_gpu.py (deflated 71%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/test/TestGpuDistance.cu (deflated 76%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/test/test_raft.py (deflated 70%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/test/TestGpuIndexBinaryFlat.cpp (deflated 71%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/test/TestGpuIndexFlat.cpp (deflated 81%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/test/test_gpu_basics.py (deflated 76%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/test/TestGpuIndexIVFFlat.cpp (deflated 85%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/test/TestUtils.h (deflated 66%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/test/CMakeLists.txt (deflated 56%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/test/test_index_cpu_to_gpu.py (deflated 75%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/test/test_gpu_index_serialize.py (deflated 63%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/test/test_gpu_index.py (deflated 85%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/GpuIndex.h (deflated 69%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/GpuResources.h (deflated 68%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/GpuIndexIVFPQ.h (deflated 67%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/perf/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/perf/PerfClustering.cpp (deflated 63%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/perf/WriteIndex.cpp (deflated 66%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/perf/PerfIVFFlat.cu (deflated 66%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/perf/PerfFlat.cu (deflated 68%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/perf/IndexWrapper.h (deflated 54%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/perf/PerfBinaryFlat.cu (deflated 65%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/perf/slow.py (deflated 40%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/perf/PerfSelect.cu (deflated 63%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/perf/PerfIVFPQAdd.cpp (deflated 72%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/perf/PerfIVFPQ.cu (deflated 66%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/perf/IndexWrapper-inl.h (deflated 62%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/GpuDistance.cu (deflated 80%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/BlockSelectKernel.cuh (deflated 78%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/DeviceTensor-inl.cuh (deflated 85%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/Select.cuh (deflated 82%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/warpselect/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/warpselect/WarpSelectFloatF512.cu (deflated 30%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/warpselect/WarpSelectFloatF2048.cu (deflated 35%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/warpselect/WarpSelectFloatF1024.cu (deflated 29%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/warpselect/WarpSelectFloat1.cu (deflated 37%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/warpselect/WarpSelectFloat128.cu (deflated 37%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/warpselect/WarpSelectFloatT2048.cu (deflated 35%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/warpselect/WarpSelectImpl.cuh (deflated 75%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/warpselect/WarpSelectFloat256.cu (deflated 37%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/warpselect/WarpSelectFloatT1024.cu (deflated 29%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/warpselect/WarpSelectFloatT512.cu (deflated 29%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/warpselect/WarpSelectFloat32.cu (deflated 37%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/warpselect/WarpSelectFloat64.cu (deflated 37%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/MatrixMult.cuh (deflated 64%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/MatrixMult-inl.cuh (deflated 80%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/MergeNetworkWarp.cuh (deflated 78%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/Tensor-inl.cuh (deflated 87%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/RaftUtils.h (deflated 61%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/WarpPackedBits.cuh (deflated 80%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/Timer.h (deflated 54%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/Comparators.cuh (deflated 60%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/BlockSelectFloat.cu (deflated 83%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/MergeNetworkBlock.cuh (deflated 80%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/blockselect/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/blockselect/BlockSelectFloatF1024.cu (deflated 30%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/blockselect/BlockSelectFloatT2048.cu (deflated 35%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/blockselect/BlockSelectFloat128.cu (deflated 37%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/blockselect/BlockSelectImpl.cuh (deflated 87%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/blockselect/BlockSelectFloat32.cu (deflated 38%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/blockselect/BlockSelectFloatT1024.cu (deflated 30%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/blockselect/BlockSelectFloatF2048.cu (deflated 36%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/blockselect/BlockSelectFloat1.cu (deflated 38%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/blockselect/BlockSelectFloat64.cu (deflated 37%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/blockselect/BlockSelectFloatF512.cu (deflated 30%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/blockselect/BlockSelectFloat256.cu (deflated 37%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/blockselect/BlockSelectFloatT512.cu (deflated 30%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/MergeNetworkUtils.cuh (deflated 45%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/DeviceDefs.cuh (deflated 42%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/StackDeviceMemory.h (deflated 63%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/ConversionOperators.cuh (deflated 75%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/DeviceVector.cuh (deflated 70%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/Limits.cuh (deflated 68%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/CopyUtils.cuh (deflated 72%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/Transpose.cuh (deflated 65%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/NoTypeTensor.cuh (deflated 70%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/ReductionOperators.cuh (deflated 66%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/LoadStoreOperators.cuh (deflated 69%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/Timer.cpp (deflated 60%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/DeviceTensor.cuh (deflated 73%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/PtxUtils.cuh (deflated 72%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/HostTensor.cuh (deflated 68%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/DeviceUtils.h (deflated 69%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/Tensor.cuh (deflated 81%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/StackDeviceMemory.cpp (deflated 67%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/WarpSelectKernel.cuh (deflated 62%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/RaftUtils.cu (deflated 67%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/DeviceUtils.cu (deflated 71%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/Reductions.cuh (deflated 74%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/WarpSelectFloat.cu (deflated 75%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/ThrustUtils.cuh (deflated 59%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/HostTensor-inl.cuh (deflated 84%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/MathOperators.cuh (deflated 87%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/Pair.cuh (deflated 67%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/WarpShuffles.cuh (deflated 76%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/StaticUtils.h (deflated 72%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/utils/Float16.cuh (deflated 53%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/GpuIndexIVFFlat.cu (deflated 76%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/GpuIndicesOptions.h (deflated 52%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/GpuIndexFlat.h (deflated 78%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/GpuResources.cpp (deflated 71%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/GpuAutoTune.cpp (deflated 69%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/GpuIndexIVFFlat.h (deflated 66%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/StandardGpuResources.cpp (deflated 75%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/GpuCloner.h (deflated 75%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/GpuIndex.cu (deflated 73%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/GpuIndexIVFPQ.cu (deflated 76%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/GpuIndexIVF.h (deflated 66%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/StandardGpuResources.h (deflated 72%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/GpuCloner.cpp (deflated 79%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/CMakeLists.txt (deflated 69%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/GpuAutoTune.h (deflated 49%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/GpuDistance.h (deflated 65%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/GpuIndexIVFScalarQuantizer.cu (deflated 73%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/gpu/GpuClonerOptions.h (deflated 55%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexLSH.cpp (deflated 70%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexIVF.h (deflated 74%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexRowwiseMinMax.h (deflated 66%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexFastScan.h (deflated 67%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexHNSW.h (deflated 70%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexBinaryFromFloat.cpp (deflated 65%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexPreTransform.cpp (deflated 77%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexPQ.cpp (deflated 76%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexBinary.cpp (deflated 65%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/MatrixStats.cpp (deflated 69%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexRowwiseMinMax.cpp (deflated 82%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexIVFPQR.h (deflated 61%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/VectorTransform.cpp (deflated 80%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/index_factory.cpp (deflated 81%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexRefine.h (deflated 64%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexShardsIVF.h (deflated 55%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexNSG.cpp (deflated 72%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexAdditiveQuantizerFastScan.h (deflated 79%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexIVFPQR.cpp (deflated 70%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexHNSW.cpp (deflated 76%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexIDMap.h (deflated 70%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/Clustering.h (deflated 65%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexBinaryFromFloat.h (deflated 53%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexBinaryHNSW.h (deflated 57%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexIVF.cpp (deflated 80%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexBinaryFlat.h (deflated 55%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/invlists/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/invlists/BlockInvertedLists.cpp (deflated 73%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/invlists/InvertedListsIOHook.cpp (deflated 69%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/invlists/DirectMap.h (deflated 58%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/invlists/InvertedLists.cpp (deflated 83%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/invlists/InvertedListsIOHook.h (deflated 59%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/invlists/OnDiskInvertedLists.h (deflated 64%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/invlists/BlockInvertedLists.h (deflated 63%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/invlists/InvertedLists.h (deflated 78%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/invlists/OnDiskInvertedLists.cpp (deflated 76%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/invlists/DirectMap.cpp (deflated 73%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexAdditiveQuantizer.cpp (deflated 81%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexReplicas.h (deflated 65%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexAdditiveQuantizerFastScan.cpp (deflated 76%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexFlat.h (deflated 67%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexPQFastScan.h (deflated 56%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexIVFFastScan.cpp (deflated 81%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexPreTransform.h (deflated 66%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/MatrixStats.h (deflated 56%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexLattice.h (deflated 57%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/MetaIndexes.cpp (deflated 71%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/clone_index.h (deflated 54%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexPQ.h (deflated 70%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IVFlib.h (deflated 65%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IVFlib.cpp (deflated 76%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexIVFFlat.cpp (deflated 75%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/python/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/python/array_conversions.py (deflated 65%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/python/python_callbacks.cpp (deflated 71%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/python/gpu_wrappers.py (deflated 76%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/python/python_callbacks.h (deflated 67%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/python/loader.py (deflated 62%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/python/class_wrappers.py (deflated 84%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/python/__init__.py (deflated 74%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/python/swigfaiss.swig (deflated 77%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/python/extra_wrappers.py (deflated 74%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/python/CMakeLists.txt (deflated 73%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/python/setup.py (deflated 63%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexIVFFastScan.h (deflated 74%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/Index2Layer.cpp (deflated 72%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/CMakeLists.txt (deflated 74%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/MetricType.h (deflated 52%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/.flake8 (deflated 7%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/index_factory.h (deflated 44%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexAdditiveQuantizer.h (deflated 81%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexIVFSpectralHash.cpp (deflated 71%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexIVFIndependentQuantizer.h (deflated 59%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexBinaryHash.cpp (deflated 77%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexShards.h (deflated 68%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/Index.h (deflated 71%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexShardsIVF.cpp (deflated 71%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexIVFPQ.h (deflated 65%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/IndexIVFSpectralHash.h (deflated 58%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/faiss/clone_index.cpp (deflated 81%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tutorial/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tutorial/cpp/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tutorial/cpp/1-Flat.cpp (deflated 68%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tutorial/cpp/2-IVFFlat.cpp (deflated 64%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tutorial/cpp/5-Multiple-GPUs.cpp (deflated 64%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tutorial/cpp/3-IVFPQ.cpp (deflated 66%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tutorial/cpp/4-GPU.cpp (deflated 72%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tutorial/cpp/CMakeLists.txt (deflated 63%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tutorial/cpp/6-HNSW.cpp (deflated 63%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tutorial/python/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tutorial/python/1-Flat.py (deflated 55%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tutorial/python/5-Multiple-GPUs.py (deflated 54%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tutorial/python/3-IVFPQ.py (deflated 49%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tutorial/python/2-IVFFlat.py (deflated 53%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tutorial/python/4-GPU.py (deflated 64%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/.clang-format (deflated 61%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_standalone_codec.py (deflated 74%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_distances_simd.cpp (deflated 75%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_clustering.py (deflated 71%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_hnsw.cpp (deflated 79%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_meta_index.py (deflated 72%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_ondisk_ivf.cpp (deflated 73%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_ivf_index.cpp (deflated 72%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_doxygen_documentation.py (deflated 40%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_residual_quantizer.py (deflated 81%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_pairs_decoding.cpp (deflated 72%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_fastscan_perf.cpp (deflated 56%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_index_composite.py (deflated 78%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_oom_exception.py (deflated 50%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_io.py (deflated 78%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_local_search_quantizer.py (deflated 81%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/common_faiss_tests.py (deflated 60%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_binary_factory.py (deflated 68%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_product_quantizer.py (deflated 71%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_build_blocks.py (deflated 75%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_dealloc_invlists.cpp (deflated 68%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_params_override.cpp (deflated 78%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_approx_topk.cpp (deflated 74%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_omp_threads.cpp (deflated 30%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_code_distance.cpp (deflated 80%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_disable_pq_sdc_tables.cpp (deflated 62%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_transfer_invlists.cpp (deflated 68%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_callback.cpp (deflated 49%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_search_params.py (deflated 78%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_extra_distances.py (deflated 76%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_fast_scan.py (deflated 78%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_referenced_objects.py (deflated 73%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_graph_based.py (deflated 80%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_merge.cpp (deflated 75%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_ivfpq_indexing.cpp (deflated 63%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_refine.py (deflated 73%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_binary_io.py (deflated 83%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_omp_threads_py.py (deflated 37%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_fast_scan_ivf.py (deflated 81%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/torch_test_contrib.py (deflated 81%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_rowwise_minmax.py (deflated 60%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_binary_flat.cpp (deflated 60%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_simdlib.cpp (deflated 87%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_pq_encoding.cpp (deflated 73%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_index_binary.py (deflated 78%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_index.py (deflated 79%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_contrib.py (deflated 77%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_cppcontrib_sa_decode.cpp (deflated 92%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_heap.cpp (deflated 70%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_threaded_index.cpp (deflated 78%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_partitioning.cpp (deflated 43%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_autotune.py (deflated 76%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_callback_py.py (deflated 48%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_index_accuracy.py (deflated 75%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_ivflib.py (deflated 71%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_sliding_ivf.cpp (deflated 73%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_merge_index.py (deflated 76%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_ivfpq_codec.cpp (deflated 57%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_mem_leak.cpp (deflated 64%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_util.h (deflated 54%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_cppcontrib_uintreader.cpp (deflated 70%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_common_ivf_empty_index.cpp (deflated 66%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_contrib_with_scipy.py (deflated 65%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_binary_hashindex.py (deflated 74%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_lowlevel_ivf.cpp (deflated 80%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_partition.py (deflated 84%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_factory.py (deflated 80%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/CMakeLists.txt (deflated 62%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_documentation.py (deflated 35%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_index_binary_from_float.py (deflated 74%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_RCQ_cropping.cpp (deflated 66%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/tests/test_clone.py (deflated 72%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/INSTALL.md (deflated 62%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/README.md (deflated 56%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/Doxyfile (deflated 74%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/CONTRIBUTING.md (deflated 48%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/IndexIVFFlat_c.h (deflated 61%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/faiss_c.h (deflated 65%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/index_io_c.h (deflated 72%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/impl/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/impl/AuxIndexStructures_c.h (deflated 71%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/impl/AuxIndexStructures_c.cpp (deflated 80%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/IndexScalarQuantizer_c.h (deflated 68%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/IndexReplicas_c.cpp (deflated 70%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/MetaIndexes_c.cpp (deflated 73%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/clone_index_c.cpp (deflated 58%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/error_c.h (deflated 47%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/IndexReplicas_c.h (deflated 57%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/IndexBinary_c.h (deflated 71%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/IndexLSH_c.h (deflated 54%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/index_factory_c.h (deflated 54%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/VectorTransform_c.cpp (deflated 82%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/AutoTune_c.h (deflated 62%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/IndexLSH_c.cpp (deflated 59%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/INSTALL.md (deflated 57%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/Clustering_c.cpp (deflated 75%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/index_factory_c.cpp (deflated 60%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/utils/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/utils/distances_c.h (deflated 72%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/utils/distances_c.cpp (deflated 76%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/IndexPreTransform_c.cpp (deflated 72%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/gpu/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/gpu/GpuIndex_c.h (deflated 41%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/gpu/GpuIndicesOptions_c.h (deflated 53%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/gpu/GpuAutoTune_c.cpp (deflated 80%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/gpu/GpuClonerOptions_c.cpp (deflated 72%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/gpu/DeviceUtils_c.h (deflated 47%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/gpu/example_gpu_c.c (deflated 68%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/gpu/macros_impl.h (deflated 65%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/gpu/GpuResources_c.h (deflated 66%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/gpu/GpuResources_c.cpp (deflated 80%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/gpu/GpuIndex_c.cpp (deflated 35%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/gpu/StandardGpuResources_c.h (deflated 60%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/gpu/GpuClonerOptions_c.h (deflated 64%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/gpu/CMakeLists.txt (deflated 43%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/gpu/DeviceUtils_c.cpp (deflated 55%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/gpu/StandardGpuResources_c.cpp (deflated 73%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/gpu/GpuAutoTune_c.h (deflated 70%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/MetaIndexes_c.h (deflated 72%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/IndexScalarQuantizer_c.cpp (deflated 76%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/clone_index_c.h (deflated 51%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/macros_impl.h (deflated 82%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/Index_c.cpp (deflated 81%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/error_impl.h (deflated 37%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/VectorTransform_c.h (deflated 75%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/example_c.c (deflated 79%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/Clustering_c.h (deflated 68%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/Index_c.h (deflated 75%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/error_impl.cpp (deflated 48%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/AutoTune_c.cpp (deflated 75%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/IndexIVFFlat_c.cpp (deflated 69%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/IndexFlat_c.h (deflated 66%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/index_io_c.cpp (deflated 75%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/IndexShards_c.cpp (deflated 71%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/IndexFlat_c.cpp (deflated 78%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/CMakeLists.txt (deflated 49%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/IndexIVF_c.h (deflated 65%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/IndexBinary_c.cpp (deflated 78%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/IndexIVF_c.cpp (deflated 74%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/IndexPreTransform_c.h (deflated 61%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/c_api/IndexShards_c.h (deflated 57%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/CODE_OF_CONDUCT.md (deflated 33%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/cmake/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/cmake/FindMKL.cmake (deflated 72%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/cmake/faiss-config.cmake.in (deflated 24%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/cmake/thirdparty/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/cmake/thirdparty/fetch_rapids.cmake (deflated 51%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/LICENSE (deflated 41%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/.gitignore (deflated 39%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/.dockerignore (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/demos/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/demos/demo_ondisk_ivf.py (deflated 63%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/demos/demo_imi_pq.cpp (deflated 65%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/demos/demo_weighted_kmeans.cpp (deflated 67%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/demos/demo_imi_flat.cpp (deflated 63%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/demos/demo_ivfpq_indexing.cpp (deflated 66%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/demos/rocksdb_ivf/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/demos/rocksdb_ivf/README.md (deflated 44%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/demos/rocksdb_ivf/RocksDBInvertedLists.h (deflated 69%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/demos/rocksdb_ivf/RocksDBInvertedLists.cpp (deflated 70%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/demos/rocksdb_ivf/demo_rocksdb_ivf.cpp (deflated 66%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/demos/rocksdb_ivf/CMakeLists.txt (deflated 31%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/demos/README.md (deflated 46%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/demos/demo_nndescent.cpp (deflated 62%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/demos/offline_ivf/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/demos/offline_ivf/offline_ivf.py (deflated 80%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/demos/offline_ivf/tests/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/demos/offline_ivf/tests/testing_utils.py (deflated 72%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/demos/offline_ivf/tests/test_iterate_input.py (deflated 79%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/demos/offline_ivf/tests/test_offline_ivf.py (deflated 84%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/demos/offline_ivf/README.md (deflated 55%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/demos/offline_ivf/run.py (deflated 72%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/demos/offline_ivf/utils.py (deflated 61%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/demos/offline_ivf/__init__.py (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/demos/offline_ivf/config_ssnpp.yaml (deflated 84%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/demos/offline_ivf/create_sharded_ssnpp_files.py (deflated 55%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/demos/offline_ivf/dataset.py (deflated 68%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/demos/offline_ivf/generate_config.py (deflated 46%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/demos/demo_sift1M.cpp (deflated 67%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/demos/demo_residual_quantizer.cpp (deflated 74%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/demos/demo_client_server_ivf.py (deflated 61%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/demos/demo_auto_tune.py (deflated 60%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/demos/CMakeLists.txt (deflated 69%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/.circleci/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/.circleci/config.yml (deflated 84%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/toy_finetune_data_minedHN.jsonl (deflated 66%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/CHANGELOG.md (deflated 62%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/CMakeLists.txt (deflated 56%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/conda/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/conda/faiss/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/conda/faiss/build-lib-arm64.sh (deflated 42%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/conda/faiss/meta.yaml (deflated 65%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/conda/faiss/build-lib.sh (deflated 44%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/conda/faiss/build-pkg.sh (deflated 42%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/conda/faiss/build-pkg-arm64.sh (deflated 38%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/conda/faiss/build-lib.bat (deflated 47%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/conda/faiss/build-lib-osx.sh (deflated 47%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/conda/faiss/build-pkg-osx.sh (deflated 45%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/conda/faiss/test_cpu_dispatch.sh (deflated 48%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/conda/faiss/build-pkg.bat (deflated 45%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/conda/conda_build_config.yaml (deflated 27%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/conda/faiss-gpu/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/conda/faiss-gpu/meta.yaml (deflated 68%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/conda/faiss-gpu/build-lib.sh (deflated 46%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/conda/faiss-gpu/build-pkg.sh (deflated 43%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/conda/faiss-gpu/test_cpu_dispatch.sh (deflated 48%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/conda/faiss-gpu-raft/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/conda/faiss-gpu-raft/meta.yaml (deflated 68%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/conda/faiss-gpu-raft/build-lib.sh (deflated 46%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/conda/faiss-gpu-raft/build-pkg.sh (deflated 44%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/conda/faiss-gpu-raft/test_cpu_dispatch.sh (deflated 48%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/.git/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/.git/index (deflated 59%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/.git/hooks/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/.git/hooks/push-to-checkout.sample (deflated 55%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/.git/hooks/pre-push.sample (deflated 49%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/.git/hooks/pre-merge-commit.sample (deflated 39%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/.git/hooks/pre-rebase.sample (deflated 59%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/.git/hooks/prepare-commit-msg.sample (deflated 50%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/.git/hooks/pre-applypatch.sample (deflated 38%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/.git/hooks/post-update.sample (deflated 27%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/.git/hooks/applypatch-msg.sample (deflated 42%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/.git/hooks/update.sample (deflated 68%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/.git/hooks/pre-commit.sample (deflated 45%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/.git/hooks/pre-receive.sample (deflated 40%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/.git/hooks/fsmonitor-watchman.sample (deflated 62%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/.git/hooks/commit-msg.sample (deflated 44%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/.git/info/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/.git/info/exclude (deflated 28%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/.git/branches/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/.git/objects/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/.git/objects/info/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/.git/objects/pack/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/.git/objects/pack/pack-08732628af75cc133b955324fc2a43f6f4867748.pack (deflated 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/.git/objects/pack/pack-08732628af75cc133b955324fc2a43f6f4867748.idx (deflated 1%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/.git/refs/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/.git/refs/heads/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/.git/refs/heads/main (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/.git/refs/tags/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/.git/refs/remotes/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/.git/refs/remotes/origin/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/.git/refs/remotes/origin/HEAD (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/.git/description (deflated 14%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/.git/logs/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/.git/logs/refs/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/.git/logs/refs/heads/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/.git/logs/refs/heads/main (deflated 30%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/.git/logs/refs/remotes/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/.git/logs/refs/remotes/origin/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/.git/logs/refs/remotes/origin/HEAD (deflated 30%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/.git/logs/HEAD (deflated 30%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/.git/config (deflated 35%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/.git/HEAD (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/.git/packed-refs (deflated 50%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/.github/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/.github/actions/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/.github/actions/build_conda/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/.github/actions/build_conda/action.yml (deflated 79%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/.github/actions/build_cmake/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/.github/actions/build_cmake/action.yml (deflated 68%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/.github/workflows/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/.github/workflows/publish-docs.yml (deflated 57%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/.github/workflows/build.yml (deflated 83%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/.github/workflows/update-doxygen.yml (deflated 57%)\n",
            "  adding: content/FlagEmbedding/faiss_xx/.github/ISSUE_TEMPLATE.md (deflated 40%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding.egg-info/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding.egg-info/requires.txt (deflated 15%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding.egg-info/dependency_links.txt (stored 0%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding.egg-info/top_level.txt (stored 0%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding.egg-info/SOURCES.txt (deflated 85%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding.egg-info/PKG-INFO (deflated 77%)\n",
            "  adding: content/FlagEmbedding/examples/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/examples/unified_finetune/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/examples/unified_finetune/toy_train_data/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/examples/unified_finetune/toy_train_data/toy_train_data1.jsonl (deflated 56%)\n",
            "  adding: content/FlagEmbedding/examples/unified_finetune/toy_train_data/toy_train_data2.jsonl (deflated 56%)\n",
            "  adding: content/FlagEmbedding/examples/unified_finetune/README.md (deflated 57%)\n",
            "  adding: content/FlagEmbedding/examples/unified_finetune/unified_finetune_bge-m3_exmaple.sh (deflated 51%)\n",
            "  adding: content/FlagEmbedding/examples/finetune/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/examples/finetune/ds_config.json (deflated 66%)\n",
            "  adding: content/FlagEmbedding/examples/finetune/toy_evaluation_data/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/examples/finetune/toy_evaluation_data/toy_corpus.json (deflated 60%)\n",
            "  adding: content/FlagEmbedding/examples/finetune/toy_evaluation_data/toy_query.json (deflated 55%)\n",
            "  adding: content/FlagEmbedding/examples/finetune/README.md (deflated 62%)\n",
            "  adding: content/FlagEmbedding/examples/finetune/toy_finetune_data.jsonl (deflated 56%)\n",
            "  adding: content/FlagEmbedding/examples/reranker/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/examples/reranker/ds_config.json (deflated 66%)\n",
            "  adding: content/FlagEmbedding/examples/reranker/README.md (deflated 59%)\n",
            "  adding: content/FlagEmbedding/examples/reranker/toy_finetune_data.jsonl (deflated 56%)\n",
            "  adding: content/FlagEmbedding/examples/search_demo/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/examples/search_demo/arguments.py (deflated 45%)\n",
            "  adding: content/FlagEmbedding/examples/search_demo/pre_process.py (deflated 66%)\n",
            "  adding: content/FlagEmbedding/examples/search_demo/run.py (deflated 55%)\n",
            "  adding: content/FlagEmbedding/examples/search_demo/__init__.py (stored 0%)\n",
            "  adding: content/FlagEmbedding/examples/search_demo/tool.py (deflated 63%)\n",
            "  adding: content/FlagEmbedding/examples/search_demo/requirements.txt (deflated 29%)\n",
            "  adding: content/FlagEmbedding/examples/search_demo/readme.md (deflated 54%)\n",
            "  adding: content/FlagEmbedding/examples/pretrain/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/examples/pretrain/toy_pretrain_data.jsonl (deflated 93%)\n",
            "  adding: content/FlagEmbedding/examples/pretrain/README.md (deflated 49%)\n",
            "  adding: content/FlagEmbedding/LICENSE (deflated 41%)\n",
            "  adding: content/FlagEmbedding/.gitignore (deflated 46%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/bge_m3.py (deflated 77%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/baai_general_embedding/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/baai_general_embedding/README.md (deflated 65%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/baai_general_embedding/__init__.py (stored 0%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/baai_general_embedding/finetune/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/baai_general_embedding/finetune/modeling.py (deflated 70%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/baai_general_embedding/finetune/arguments.py (deflated 67%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/baai_general_embedding/finetune/data.py (deflated 71%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/baai_general_embedding/finetune/eval_msmarco.py (deflated 71%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/baai_general_embedding/finetune/run.py (deflated 67%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/baai_general_embedding/finetune/__init__.py (deflated 27%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/baai_general_embedding/finetune/hn_mine.py (deflated 68%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/baai_general_embedding/finetune/__pycache__/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/baai_general_embedding/finetune/__pycache__/modeling.cpython-310.pyc (deflated 46%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/baai_general_embedding/finetune/__pycache__/trainer.cpython-310.pyc (deflated 40%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/baai_general_embedding/finetune/__pycache__/__init__.cpython-310.pyc (deflated 27%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/baai_general_embedding/finetune/__pycache__/hn_mine.cpython-310.pyc (deflated 43%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/baai_general_embedding/finetune/trainer.py (deflated 63%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/baai_general_embedding/__pycache__/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/baai_general_embedding/__pycache__/__init__.cpython-310.pyc (deflated 32%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/baai_general_embedding/retromae_pretrain/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/baai_general_embedding/retromae_pretrain/modeling.py (deflated 70%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/baai_general_embedding/retromae_pretrain/arguments.py (deflated 62%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/baai_general_embedding/retromae_pretrain/enhancedDecoder.py (deflated 79%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/baai_general_embedding/retromae_pretrain/data.py (deflated 73%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/baai_general_embedding/retromae_pretrain/run.py (deflated 66%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/baai_general_embedding/retromae_pretrain/utils.py (deflated 74%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/baai_general_embedding/retromae_pretrain/__init__.py (stored 0%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/baai_general_embedding/retromae_pretrain/trainer.py (deflated 59%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/.DS_Store (deflated 93%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/flag_reranker.py (deflated 85%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/visual/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/visual/modeling.py (deflated 74%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/visual/README.md (deflated 65%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/visual/__init__.py (stored 0%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/visual/eva_clip/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/visual/eva_clip/model.py (deflated 75%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/visual/eva_clip/openai.py (deflated 65%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/visual/eva_clip/timm_model.py (deflated 66%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/visual/eva_clip/tokenizer.py (deflated 63%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/visual/eva_clip/bpe_simple_vocab_16e6.txt.gz (deflated 0%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/visual/eva_clip/utils.py (deflated 79%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/visual/eva_clip/transform.py (deflated 65%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/visual/eva_clip/__init__.py (deflated 59%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/visual/eva_clip/constants.py (deflated 22%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/visual/eva_clip/loss.py (deflated 78%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/visual/eva_clip/transformer.py (deflated 80%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/visual/eva_clip/factory.py (deflated 81%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/visual/eva_clip/pretrained.py (deflated 76%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/visual/eva_clip/rope.py (deflated 74%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/visual/eva_clip/hf_configs.py (deflated 77%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/visual/eva_clip/model_configs/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/visual/eva_clip/model_configs/EVA01-CLIP-B-16.json (deflated 51%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/visual/eva_clip/model_configs/EVA02-CLIP-L-14.json (deflated 59%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/visual/eva_clip/model_configs/EVA02-CLIP-B-16.json (deflated 59%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/visual/eva_clip/model_configs/EVA02-CLIP-bigE-14.json (deflated 56%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/visual/eva_clip/model_configs/EVA02-CLIP-bigE-14-plus.json (deflated 57%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/visual/eva_clip/model_configs/EVA02-CLIP-L-14-336.json (deflated 58%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/visual/eva_clip/model_configs/EVA01-CLIP-g-14.json (deflated 56%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/visual/eva_clip/model_configs/EVA01-CLIP-g-14-plus.json (deflated 56%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/visual/eva_clip/hf_model.py (deflated 74%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/visual/eva_clip/eva_vit_model.py (deflated 78%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/visual/eva_clip/modified_resnet.py (deflated 71%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/visual/imgs/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/visual/imgs/SFT-ReMuQ.png (deflated 3%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/visual/imgs/cir_candi_1.png (deflated 0%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/visual/imgs/zs-performance.png (deflated 7%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/visual/imgs/cir_query.png (deflated 0%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/visual/imgs/cir_candi_2.png (deflated 1%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/visual/imgs/wiki_candi_1.jpg (deflated 0%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/visual/imgs/wiki_candi_2.jpg (deflated 0%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/visual/imgs/SFT-CIRR.png (deflated 4%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/visual/imgs/SFT-WebQA.png (deflated 6%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/visual/imgs/zs-benchmark.png (deflated 5%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/flag_models.py (deflated 82%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/__init__.py (deflated 40%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_embedder/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_embedder/environment.yaml (deflated 60%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_embedder/README.md (deflated 71%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_embedder/evaluation/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_embedder/evaluation/eval_msc.py (deflated 66%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_embedder/evaluation/eval_qrecc.py (deflated 68%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_embedder/evaluation/eval_mmlu.py (deflated 69%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_embedder/evaluation/eval_popqa.py (deflated 68%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_embedder/evaluation/eval_lrlm.py (deflated 67%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_embedder/evaluation/__init__.py (stored 0%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_embedder/evaluation/eval_tool.py (deflated 62%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_embedder/evaluation/eval_retrieval.py (deflated 71%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_embedder/evaluation/eval_icl.py (deflated 74%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_embedder/evaluation/icl_utils.py (deflated 72%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_embedder/evaluation/eval_qa.py (deflated 69%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_embedder/scripts/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_embedder/scripts/llm-embedder.sh (deflated 81%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_embedder/scripts/ours2st.py (deflated 65%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_embedder/docs/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_embedder/docs/evaluation.md (deflated 63%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_embedder/docs/fine-tune.md (deflated 68%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_embedder/src/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_embedder/src/retrieval/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_embedder/src/retrieval/args.py (deflated 76%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_embedder/src/retrieval/modeling_bm25.py (deflated 72%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_embedder/src/retrieval/modeling_ranker.py (deflated 63%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_embedder/src/retrieval/data.py (deflated 80%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_embedder/src/retrieval/__init__.py (deflated 53%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_embedder/src/retrieval/modeling_unified.py (deflated 70%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_embedder/src/retrieval/metrics.py (deflated 81%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_embedder/src/retrieval/evalnq.py (deflated 65%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_embedder/src/retrieval/modeling_dense.py (deflated 76%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_embedder/src/retrieval/trainer.py (deflated 71%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_embedder/src/utils/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_embedder/src/utils/util.py (deflated 69%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_embedder/src/utils/__init__.py (deflated 39%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_embedder/src/utils/llama_patch.py (deflated 70%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_embedder/src/__init__.py (deflated 32%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_embedder/src/lm/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_embedder/src/lm/args.py (deflated 71%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_embedder/src/lm/modeling_lm.py (deflated 75%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_embedder/src/lm/__init__.py (deflated 34%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_embedder/src/lm/modeling_srlm.py (deflated 79%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_embedder/data/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_embedder/data/deepspeed/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_embedder/data/deepspeed/stage0.json (deflated 66%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_embedder/data/deepspeed/stage2-offload.json (deflated 67%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_embedder/data/deepspeed/stage3.json (deflated 66%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_embedder/data/deepspeed/stage3-offload-all.json (deflated 68%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_embedder/data/deepspeed/stage3-offload-optim.json (deflated 66%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_embedder/data/deepspeed/stage2.json (deflated 66%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_embedder/data/toy/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_embedder/data/toy/lrlm.json (deflated 62%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_embedder/data/toy/convsearch.json (deflated 66%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_embedder/data/toy/chat.json (deflated 85%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_embedder/data/toy/tool.json (deflated 80%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_embedder/data/toy/icl.json (deflated 72%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_embedder/data/toy/qa.json (deflated 69%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_embedder/run_ranker.py (deflated 73%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_embedder/run_lm_score.py (deflated 72%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_embedder/run_dense.py (deflated 74%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_embedder/imgs/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_embedder/imgs/llm-embedder.png (deflated 2%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/BGE_M3/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/BGE_M3/modeling.py (deflated 79%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/BGE_M3/arguments.py (deflated 70%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/BGE_M3/.DS_Store (deflated 96%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/BGE_M3/BGE_M3.pdf (deflated 6%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/BGE_M3/split_data_by_length.py (deflated 72%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/BGE_M3/data.py (deflated 77%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/BGE_M3/README.md (deflated 68%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/BGE_M3/run.py (deflated 69%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/BGE_M3/__init__.py (deflated 21%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/BGE_M3/__pycache__/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/BGE_M3/__pycache__/modeling.cpython-310.pyc (deflated 50%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/BGE_M3/__pycache__/trainer.cpython-310.pyc (deflated 40%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/BGE_M3/__pycache__/__init__.cpython-310.pyc (deflated 22%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/BGE_M3/trainer.py (deflated 63%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/BGE_M3/imgs/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/BGE_M3/imgs/.DS_Store (deflated 97%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/BGE_M3/imgs/miracl.jpg (deflated 3%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/BGE_M3/imgs/long.jpg (deflated 4%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/BGE_M3/imgs/mkqa.jpg (deflated 3%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/BGE_M3/imgs/nqa.jpg (deflated 5%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/BGE_M3/imgs/others.webp (deflated 0%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/BGE_M3/imgs/bm25.jpg (deflated 6%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_reranker/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_reranker/finetune_for_layerwise/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_reranker/finetune_for_layerwise/modeling.py (deflated 69%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_reranker/finetune_for_layerwise/arguments.py (deflated 71%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_reranker/finetune_for_layerwise/data.py (deflated 77%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_reranker/finetune_for_layerwise/run.py (deflated 67%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_reranker/finetune_for_layerwise/__init__.py (stored 0%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_reranker/finetune_for_layerwise/modeling_minicpm_reranker.py (deflated 79%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_reranker/finetune_for_layerwise/configuration_minicpm_reranker.py (deflated 66%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_reranker/finetune_for_layerwise/trainer.py (deflated 60%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_reranker/finetune_for_layerwise/load_model.py (deflated 79%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_reranker/merge/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_reranker/merge/merge_layerwise_model_from_raw_model.py (deflated 77%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_reranker/merge/__init__.py (deflated 59%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_reranker/merge/modeling_minicpm_reranker.py (deflated 79%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_reranker/merge/merge_base_model.py (deflated 75%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_reranker/merge/merge_layerwise_model_from_finetuned_model.py (deflated 74%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_reranker/merge/configuration_minicpm_reranker.py (deflated 66%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_reranker/README.md (deflated 78%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_reranker/evaluation/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_reranker/evaluation/miracl-bge-m3.png (deflated 9%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_reranker/evaluation/BEIR-e5-mistral.png (deflated 6%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_reranker/evaluation/BEIR-bge-en-v1.5.png (deflated 7%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_reranker/evaluation/llama-index.png (deflated 6%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_reranker/evaluation/CMTEB-retrieval-bge-zh-v1.5.png (deflated 5%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_reranker/__init__.py (stored 0%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_reranker/stage1.json (deflated 70%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_reranker/finetune_for_instruction/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_reranker/finetune_for_instruction/modeling.py (deflated 67%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_reranker/finetune_for_instruction/arguments.py (deflated 72%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_reranker/finetune_for_instruction/data.py (deflated 76%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_reranker/finetune_for_instruction/run.py (deflated 67%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_reranker/finetune_for_instruction/__init__.py (stored 0%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_reranker/finetune_for_instruction/trainer.py (deflated 60%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_reranker/finetune_for_instruction/load_model.py (deflated 64%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/llm_reranker/toy_finetune_data.jsonl (deflated 66%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/reranker/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/reranker/modeling.py (deflated 67%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/reranker/arguments.py (deflated 60%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/reranker/data.py (deflated 68%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/reranker/README.md (deflated 61%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/reranker/run.py (deflated 67%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/reranker/__init__.py (stored 0%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/reranker/trainer.py (deflated 54%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/__pycache__/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/__pycache__/__init__.cpython-310.pyc (deflated 31%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/__pycache__/flag_models.cpython-310.pyc (deflated 54%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/__pycache__/bge_m3.cpython-310.pyc (deflated 47%)\n",
            "  adding: content/FlagEmbedding/FlagEmbedding/__pycache__/flag_reranker.cpython-310.pyc (deflated 54%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/longllm_qlora/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/longllm_qlora/README.md (deflated 67%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/longllm_qlora/main/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/longllm_qlora/main/eval_generation.py (deflated 65%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/longllm_qlora/main/eval_passkey.py (deflated 67%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/longllm_qlora/main/eval_lm.py (deflated 65%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/longllm_qlora/main/eval_mmlu.py (deflated 68%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/longllm_qlora/main/infbench_utils.py (deflated 78%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/longllm_qlora/main/longbench_utils.py (deflated 73%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/longllm_qlora/main/eval_infbench.py (deflated 72%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/longllm_qlora/main/eval_topic.py (deflated 64%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/longllm_qlora/main/eval_longbench.py (deflated 72%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/longllm_qlora/main/eval_needle.py (deflated 70%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/longllm_qlora/main/train.py (deflated 64%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/longllm_qlora/src/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/longllm_qlora/src/args.py (deflated 76%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/longllm_qlora/src/modeling_utils.py (deflated 76%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/longllm_qlora/src/data.py (deflated 75%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/longllm_qlora/src/utils.py (deflated 69%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/longllm_qlora/src/__init__.py (deflated 69%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/longllm_qlora/src/metrics.py (deflated 70%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/longllm_qlora/src/chat.py (deflated 80%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/longllm_qlora/src/trainer.py (deflated 67%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/longllm_qlora/data/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/longllm_qlora/data/narrativeqa.json (deflated 61%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/longllm_qlora/imgs/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/longllm_qlora/imgs/needle.png (deflated 18%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/old/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/old/environment.yaml (deflated 60%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/old/README.md (deflated 51%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/old/main/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/old/main/eval_passkey.py (deflated 66%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/old/main/eval_lm.py (deflated 67%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/old/main/longbench_utils.py (deflated 73%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/old/main/eval_longeval.py (deflated 65%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/old/main/eval_longbench.py (deflated 71%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/old/main/train.py (deflated 69%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/old/docs/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/old/docs/training.md (deflated 56%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/old/docs/evaluation.md (deflated 80%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/old/src/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/old/src/args.py (deflated 75%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/old/src/util.py (deflated 69%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/old/src/activation_beacon_llama/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/old/src/activation_beacon_llama/modeling_llama.py (deflated 79%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/old/src/activation_beacon_llama/__init__.py (deflated 73%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/old/src/activation_beacon_llama/modeling_beacon.py (deflated 77%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/old/src/activation_beacon_llama/configuration_llama.py (deflated 67%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/old/src/activation_beacon_llama/modeling_retrieval.py (deflated 69%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/old/src/data.py (deflated 72%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/old/src/__init__.py (deflated 43%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/old/src/metrics.py (deflated 73%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/old/src/colossal.py (deflated 76%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/old/src/trainer.py (deflated 68%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/old/data/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/old/data/deepspeed/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/old/data/deepspeed/stage2_small.json (deflated 64%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/old/data/deepspeed/stage2_offload.json (deflated 64%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/old/data/deepspeed/stage0.json (deflated 66%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/old/data/deepspeed/stage3.json (deflated 64%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/old/data/deepspeed/stage1.json (deflated 66%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/old/data/deepspeed/stage2.json (deflated 64%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/old/data/toy/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/old/data/toy/narrativeqa.json (deflated 61%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/old/imgs/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/old/imgs/activation-beacon.png (deflated 3%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/old/imgs/impress.png (deflated 5%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/README.md (deflated 46%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/.gitignore (stored 0%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/README.md (deflated 57%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/main/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/main/eval_generation.py (deflated 65%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/main/eval_passkey.py (deflated 67%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/main/eval_lm.py (deflated 65%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/main/infbench_utils.py (deflated 78%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/main/longbench_utils.py (deflated 73%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/main/pretrain_data.py (deflated 68%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/main/eval_infbench.py (deflated 72%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/main/eval_topic.py (deflated 64%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/main/eval_longbench.py (deflated 72%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/main/eval_needle.py (deflated 69%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/main/train.py (deflated 68%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/docs/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/docs/training.md (deflated 51%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/docs/evaluation.md (deflated 69%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/src/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/src/args.py (deflated 76%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/src/modeling_utils.py (deflated 69%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/src/modeling_rag.py (deflated 72%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/src/llama/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/src/llama/modeling_llama.py (deflated 80%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/src/llama/__init__.py (deflated 26%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/src/llama/configuration_llama.py (deflated 67%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/src/data.py (deflated 75%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/src/utils.py (deflated 69%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/src/__init__.py (deflated 72%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/src/modeling_beacon.py (deflated 79%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/src/metrics.py (deflated 70%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/src/mistral/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/src/mistral/modeling_mistral.py (deflated 80%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/src/mistral/__init__.py (deflated 30%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/src/mistral/configuration_mistral.py (deflated 69%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/src/colossal.py (deflated 76%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/src/chat.py (deflated 80%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/src/trainer.py (deflated 71%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/data/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/data/deepspeed/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/data/deepspeed/stage2-offload.json (deflated 64%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/data/deepspeed/stage3.json (deflated 69%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/data/deepspeed/stage3-offload.json (deflated 71%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/data/deepspeed/stage3-offload-optim.json (deflated 69%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/data/deepspeed/stage2.json (deflated 64%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/data/toy/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/data/toy/infbench.json (deflated 62%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/data/toy/PaulGrahamEssays/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/data/toy/PaulGrahamEssays/diff.txt (deflated 53%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/data/toy/PaulGrahamEssays/founders.txt (deflated 52%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/data/toy/PaulGrahamEssays/gba.txt (deflated 54%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/data/toy/PaulGrahamEssays/web20.txt (deflated 57%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/data/toy/PaulGrahamEssays/siliconvalley.txt (deflated 59%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/data/toy/PaulGrahamEssays/wisdom.txt (deflated 59%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/data/toy/PaulGrahamEssays/gh.txt (deflated 59%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/data/toy/PaulGrahamEssays/iflisp.txt (deflated 50%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/data/toy/PaulGrahamEssays/corpdev.txt (deflated 56%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/data/toy/PaulGrahamEssays/desres.txt (deflated 59%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/data/toy/PaulGrahamEssays/philosophy.txt (deflated 59%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/data/toy/PaulGrahamEssays/vcsqueeze.txt (deflated 55%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/data/toy/PaulGrahamEssays/submarine.txt (deflated 55%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/data/toy/PaulGrahamEssays/avg.txt (deflated 61%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/data/toy/PaulGrahamEssays/vw.txt (deflated 49%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/data/toy/PaulGrahamEssays/worked.txt (deflated 61%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/data/toy/PaulGrahamEssays/rootsoflisp.txt (deflated 49%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/data/toy/PaulGrahamEssays/superangels.txt (deflated 61%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/data/toy/PaulGrahamEssays/boss.txt (deflated 58%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/data/toy/PaulGrahamEssays/foundervisa.txt (deflated 51%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/data/toy/PaulGrahamEssays/ecw.txt (deflated 55%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/data/toy/PaulGrahamEssays/newideas.txt (deflated 56%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/data/toy/PaulGrahamEssays/sun.txt (deflated 52%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/data/toy/PaulGrahamEssays/hubs.txt (deflated 57%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/data/toy/PaulGrahamEssays/copy.txt (deflated 53%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/data/toy/PaulGrahamEssays/apple.txt (deflated 56%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/data/toy/PaulGrahamEssays/laundry.txt (deflated 58%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/data/toy/PaulGrahamEssays/want.txt (deflated 53%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/data/toy/PaulGrahamEssays/aord.txt (deflated 57%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/data/toy/PaulGrahamEssays/rss.txt (stored 0%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/data/toy/PaulGrahamEssays/popular.txt (deflated 62%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/data/toy/PaulGrahamEssays/langdes.txt (deflated 60%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/data/toy/PaulGrahamEssays/useful.txt (deflated 59%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/data/toy/PaulGrahamEssays/nft.txt (deflated 47%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/data/toy/PaulGrahamEssays/bias.txt (deflated 55%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/data/toy/PaulGrahamEssays/mod.txt (deflated 55%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/data/toy/PaulGrahamEssays/gap.txt (deflated 58%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/data/toy/PaulGrahamEssays/pow.txt (deflated 43%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/data/toy/PaulGrahamEssays/vb.txt (deflated 56%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/data/toy/PaulGrahamEssays/before.txt (deflated 60%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/data/toy/PaulGrahamEssays/know.txt (deflated 51%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/data/toy/PaulGrahamEssays/love.txt (deflated 59%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/data/toy/PaulGrahamEssays/unions.txt (deflated 51%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/data/toy/PaulGrahamEssays/island.txt (deflated 52%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/data/toy/PaulGrahamEssays/goodtaste.txt (deflated 57%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/data/toy/PaulGrahamEssays/startuplessons.txt (deflated 59%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/data/toy/PaulGrahamEssays/addiction.txt (deflated 55%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/data/toy/PaulGrahamEssays/weird.txt (deflated 53%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/data/toy/PaulGrahamEssays/todo.txt (deflated 46%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/imgs/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/imgs/passkey.png (deflated 44%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/imgs/topic.png (deflated 31%)\n",
            "  adding: content/FlagEmbedding/Long_LLM/activation_beacon/new/imgs/needle.png (deflated 42%)\n",
            "  adding: content/FlagEmbedding/C_MTEB/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/C_MTEB/MLDR/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/C_MTEB/MLDR/hybrid_retrieval/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/C_MTEB/MLDR/hybrid_retrieval/step1-eval_hybrid_mldr.py (deflated 71%)\n",
            "  adding: content/FlagEmbedding/C_MTEB/MLDR/hybrid_retrieval/step0-hybrid_search_results.py (deflated 74%)\n",
            "  adding: content/FlagEmbedding/C_MTEB/MLDR/dense_retrieval/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/C_MTEB/MLDR/dense_retrieval/step0-generate_embedding.py (deflated 68%)\n",
            "  adding: content/FlagEmbedding/C_MTEB/MLDR/dense_retrieval/step1-search_results.py (deflated 71%)\n",
            "  adding: content/FlagEmbedding/C_MTEB/MLDR/dense_retrieval/step2-eval_dense_mldr.py (deflated 70%)\n",
            "  adding: content/FlagEmbedding/C_MTEB/MLDR/README.md (deflated 77%)\n",
            "  adding: content/FlagEmbedding/C_MTEB/MLDR/sparse_retrieval/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/C_MTEB/MLDR/sparse_retrieval/step2-eval_sparse_mldr.py (deflated 69%)\n",
            "  adding: content/FlagEmbedding/C_MTEB/MLDR/sparse_retrieval/bm25_baseline_same_tokenizer.py (deflated 70%)\n",
            "  adding: content/FlagEmbedding/C_MTEB/MLDR/sparse_retrieval/step0-encode_query-and-corpus.py (deflated 73%)\n",
            "  adding: content/FlagEmbedding/C_MTEB/MLDR/sparse_retrieval/bm25_baseline.py (deflated 69%)\n",
            "  adding: content/FlagEmbedding/C_MTEB/MLDR/sparse_retrieval/step1-search_results.py (deflated 73%)\n",
            "  adding: content/FlagEmbedding/C_MTEB/MLDR/mteb_dense_eval/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/C_MTEB/MLDR/mteb_dense_eval/flag_dres_model.py (deflated 76%)\n",
            "  adding: content/FlagEmbedding/C_MTEB/MLDR/mteb_dense_eval/eval_MLDR.py (deflated 71%)\n",
            "  adding: content/FlagEmbedding/C_MTEB/MLDR/multi_vector_rerank/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/C_MTEB/MLDR/multi_vector_rerank/step0-rerank_results.py (deflated 73%)\n",
            "  adding: content/FlagEmbedding/C_MTEB/MLDR/multi_vector_rerank/hybrid_all_results.py (deflated 77%)\n",
            "  adding: content/FlagEmbedding/C_MTEB/MLDR/multi_vector_rerank/step1-eval_rerank_mldr.py (deflated 73%)\n",
            "  adding: content/FlagEmbedding/C_MTEB/MKQA/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/C_MTEB/MKQA/hybrid_retrieval/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/C_MTEB/MKQA/hybrid_retrieval/step1-eval_hybrid_mkqa.py (deflated 72%)\n",
            "  adding: content/FlagEmbedding/C_MTEB/MKQA/hybrid_retrieval/step0-hybrid_search_results.py (deflated 77%)\n",
            "  adding: content/FlagEmbedding/C_MTEB/MKQA/dense_retrieval/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/C_MTEB/MKQA/dense_retrieval/step2-eval_dense_mkqa.py (deflated 72%)\n",
            "  adding: content/FlagEmbedding/C_MTEB/MKQA/dense_retrieval/step0-generate_embedding.py (deflated 68%)\n",
            "  adding: content/FlagEmbedding/C_MTEB/MKQA/dense_retrieval/step1-search_results.py (deflated 71%)\n",
            "  adding: content/FlagEmbedding/C_MTEB/MKQA/README.md (deflated 79%)\n",
            "  adding: content/FlagEmbedding/C_MTEB/MKQA/utils/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/C_MTEB/MKQA/utils/evaluation.py (deflated 59%)\n",
            "  adding: content/FlagEmbedding/C_MTEB/MKQA/utils/__init__.py (stored 0%)\n",
            "  adding: content/FlagEmbedding/C_MTEB/MKQA/utils/normalize_text.py (deflated 60%)\n",
            "  adding: content/FlagEmbedding/C_MTEB/MKQA/sparse_retrieval/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/C_MTEB/MKQA/sparse_retrieval/bm25_baseline_same_tokenizer.py (deflated 70%)\n",
            "  adding: content/FlagEmbedding/C_MTEB/MKQA/sparse_retrieval/step0-encode_query-and-corpus.py (deflated 72%)\n",
            "  adding: content/FlagEmbedding/C_MTEB/MKQA/sparse_retrieval/bm25_baseline.py (deflated 67%)\n",
            "  adding: content/FlagEmbedding/C_MTEB/MKQA/sparse_retrieval/step1-search_results.py (deflated 72%)\n",
            "  adding: content/FlagEmbedding/C_MTEB/MKQA/sparse_retrieval/step2-eval_sparse_mkqa.py (deflated 72%)\n",
            "  adding: content/FlagEmbedding/C_MTEB/MKQA/multi_vector_rerank/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/C_MTEB/MKQA/multi_vector_rerank/step0-rerank_results.py (deflated 73%)\n",
            "  adding: content/FlagEmbedding/C_MTEB/MKQA/multi_vector_rerank/hybrid_all_results.py (deflated 80%)\n",
            "  adding: content/FlagEmbedding/C_MTEB/MKQA/multi_vector_rerank/step1-eval_rerank_mkqa.py (deflated 77%)\n",
            "  adding: content/FlagEmbedding/C_MTEB/README.md (deflated 72%)\n",
            "  adding: content/FlagEmbedding/C_MTEB/eval_cross_encoder.py (deflated 49%)\n",
            "  adding: content/FlagEmbedding/C_MTEB/eval_MTEB.py (deflated 69%)\n",
            "  adding: content/FlagEmbedding/C_MTEB/flag_dres_model.py (deflated 69%)\n",
            "  adding: content/FlagEmbedding/C_MTEB/C_MTEB/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/C_MTEB/C_MTEB/tasks/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/C_MTEB/C_MTEB/tasks/STS.py (deflated 87%)\n",
            "  adding: content/FlagEmbedding/C_MTEB/C_MTEB/tasks/Reranking.py (deflated 77%)\n",
            "  adding: content/FlagEmbedding/C_MTEB/C_MTEB/tasks/Retrieval.py (deflated 87%)\n",
            "  adding: content/FlagEmbedding/C_MTEB/C_MTEB/tasks/Clustering.py (deflated 81%)\n",
            "  adding: content/FlagEmbedding/C_MTEB/C_MTEB/tasks/__init__.py (deflated 53%)\n",
            "  adding: content/FlagEmbedding/C_MTEB/C_MTEB/tasks/Classification.py (deflated 82%)\n",
            "  adding: content/FlagEmbedding/C_MTEB/C_MTEB/tasks/PairClassification.py (deflated 66%)\n",
            "  adding: content/FlagEmbedding/C_MTEB/C_MTEB/tasks/MultiLongDocRetrieval.py (deflated 70%)\n",
            "  adding: content/FlagEmbedding/C_MTEB/C_MTEB/__init__.py (deflated 55%)\n",
            "  adding: content/FlagEmbedding/C_MTEB/eval_C-MTEB.py (deflated 69%)\n",
            "  adding: content/FlagEmbedding/C_MTEB/setup.py (deflated 39%)\n",
            "  adding: content/FlagEmbedding/C_MTEB/summarize_results.py (deflated 77%)\n",
            "  adding: content/FlagEmbedding/LM_Cocktail/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/LM_Cocktail/.DS_Store (deflated 96%)\n",
            "  adding: content/FlagEmbedding/LM_Cocktail/README.md (deflated 67%)\n",
            "  adding: content/FlagEmbedding/LM_Cocktail/images/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/LM_Cocktail/images/1.png (deflated 0%)\n",
            "  adding: content/FlagEmbedding/LM_Cocktail/images/pic.png (deflated 6%)\n",
            "  adding: content/FlagEmbedding/LM_Cocktail/embedder_examples.json (deflated 67%)\n",
            "  adding: content/FlagEmbedding/LM_Cocktail/llm_examples.json (deflated 73%)\n",
            "  adding: content/FlagEmbedding/LM_Cocktail/LM_Cocktail/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/LM_Cocktail/LM_Cocktail/utils.py (deflated 76%)\n",
            "  adding: content/FlagEmbedding/LM_Cocktail/LM_Cocktail/__init__.py (deflated 23%)\n",
            "  adding: content/FlagEmbedding/LM_Cocktail/LM_Cocktail/cocktail.py (deflated 79%)\n",
            "  adding: content/FlagEmbedding/LM_Cocktail/setup.py (deflated 42%)\n",
            "  adding: content/FlagEmbedding/setup.py (deflated 44%)\n",
            "  adding: content/FlagEmbedding/.git/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/.git/index (deflated 64%)\n",
            "  adding: content/FlagEmbedding/.git/hooks/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/.git/hooks/push-to-checkout.sample (deflated 55%)\n",
            "  adding: content/FlagEmbedding/.git/hooks/pre-push.sample (deflated 49%)\n",
            "  adding: content/FlagEmbedding/.git/hooks/pre-merge-commit.sample (deflated 39%)\n",
            "  adding: content/FlagEmbedding/.git/hooks/pre-rebase.sample (deflated 59%)\n",
            "  adding: content/FlagEmbedding/.git/hooks/prepare-commit-msg.sample (deflated 50%)\n",
            "  adding: content/FlagEmbedding/.git/hooks/pre-applypatch.sample (deflated 38%)\n",
            "  adding: content/FlagEmbedding/.git/hooks/post-update.sample (deflated 27%)\n",
            "  adding: content/FlagEmbedding/.git/hooks/applypatch-msg.sample (deflated 42%)\n",
            "  adding: content/FlagEmbedding/.git/hooks/update.sample (deflated 68%)\n",
            "  adding: content/FlagEmbedding/.git/hooks/pre-commit.sample (deflated 45%)\n",
            "  adding: content/FlagEmbedding/.git/hooks/pre-receive.sample (deflated 40%)\n",
            "  adding: content/FlagEmbedding/.git/hooks/fsmonitor-watchman.sample (deflated 62%)\n",
            "  adding: content/FlagEmbedding/.git/hooks/commit-msg.sample (deflated 44%)\n",
            "  adding: content/FlagEmbedding/.git/info/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/.git/info/exclude (deflated 28%)\n",
            "  adding: content/FlagEmbedding/.git/branches/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/.git/objects/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/.git/objects/info/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/.git/objects/pack/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/.git/objects/pack/pack-e5da0ec72f5f9f21a3e97e6b760bf31b72c27198.pack (deflated 0%)\n",
            "  adding: content/FlagEmbedding/.git/objects/pack/pack-e5da0ec72f5f9f21a3e97e6b760bf31b72c27198.idx (deflated 2%)\n",
            "  adding: content/FlagEmbedding/.git/refs/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/.git/refs/heads/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/.git/refs/heads/master (stored 0%)\n",
            "  adding: content/FlagEmbedding/.git/refs/tags/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/.git/refs/remotes/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/.git/refs/remotes/origin/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/.git/refs/remotes/origin/HEAD (stored 0%)\n",
            "  adding: content/FlagEmbedding/.git/description (deflated 14%)\n",
            "  adding: content/FlagEmbedding/.git/logs/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/.git/logs/refs/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/.git/logs/refs/heads/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/.git/logs/refs/heads/master (deflated 28%)\n",
            "  adding: content/FlagEmbedding/.git/logs/refs/remotes/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/.git/logs/refs/remotes/origin/ (stored 0%)\n",
            "  adding: content/FlagEmbedding/.git/logs/refs/remotes/origin/HEAD (deflated 28%)\n",
            "  adding: content/FlagEmbedding/.git/logs/HEAD (deflated 28%)\n",
            "  adding: content/FlagEmbedding/.git/config (deflated 33%)\n",
            "  adding: content/FlagEmbedding/.git/HEAD (stored 0%)\n",
            "  adding: content/FlagEmbedding/.git/packed-refs (deflated 31%)\n",
            "  adding: content/training_args.bin (deflated 50%)\n",
            "  adding: content/checkpoint-2000/ (stored 0%)\n",
            "  adding: content/checkpoint-2000/tokenizer.json (deflated 71%)\n",
            "  adding: content/checkpoint-2000/1_Pooling/ (stored 0%)\n",
            "  adding: content/checkpoint-2000/1_Pooling/config.json (deflated 57%)\n",
            "  adding: content/checkpoint-2000/scheduler.pt (deflated 56%)\n",
            "  adding: content/checkpoint-2000/trainer_state.json (deflated 81%)\n",
            "  adding: content/checkpoint-2000/README.md (deflated 54%)\n",
            "  adding: content/checkpoint-2000/config_sentence_transformers.json (deflated 31%)\n",
            "  adding: content/checkpoint-2000/2_Normalize/ (stored 0%)\n",
            "  adding: content/checkpoint-2000/model.safetensors\n",
            "\n",
            "\n",
            "zip error: Interrupted (aborting)\n"
          ]
        }
      ]
    }
  ]
}